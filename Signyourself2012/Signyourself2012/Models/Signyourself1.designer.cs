#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Signyourself2012.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SignYourself")]
	public partial class SignyourselfDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertActivity(Activity instance);
    partial void UpdateActivity(Activity instance);
    partial void DeleteActivity(Activity instance);
    partial void InsertActivityType(ActivityType instance);
    partial void UpdateActivityType(ActivityType instance);
    partial void DeleteActivityType(ActivityType instance);
    partial void InsertAlbum(Album instance);
    partial void UpdateAlbum(Album instance);
    partial void DeleteAlbum(Album instance);
    partial void InsertAlbumType(AlbumType instance);
    partial void UpdateAlbumType(AlbumType instance);
    partial void DeleteAlbumType(AlbumType instance);
    partial void InsertCampaign_Users_RelationshipType(Campaign_Users_RelationshipType instance);
    partial void UpdateCampaign_Users_RelationshipType(Campaign_Users_RelationshipType instance);
    partial void DeleteCampaign_Users_RelationshipType(Campaign_Users_RelationshipType instance);
    partial void InsertCampaignComment(CampaignComment instance);
    partial void UpdateCampaignComment(CampaignComment instance);
    partial void DeleteCampaignComment(CampaignComment instance);
    partial void InsertCampaignReview(CampaignReview instance);
    partial void UpdateCampaignReview(CampaignReview instance);
    partial void DeleteCampaignReview(CampaignReview instance);
    partial void InsertCampaign(Campaign instance);
    partial void UpdateCampaign(Campaign instance);
    partial void DeleteCampaign(Campaign instance);
    partial void InsertCampaignType(CampaignType instance);
    partial void UpdateCampaignType(CampaignType instance);
    partial void DeleteCampaignType(CampaignType instance);
    partial void InsertCampaignUpdate(CampaignUpdate instance);
    partial void UpdateCampaignUpdate(CampaignUpdate instance);
    partial void DeleteCampaignUpdate(CampaignUpdate instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertFile(File instance);
    partial void UpdateFile(File instance);
    partial void DeleteFile(File instance);
    partial void InsertFileType(FileType instance);
    partial void UpdateFileType(FileType instance);
    partial void DeleteFileType(FileType instance);
    partial void InsertGenre(Genre instance);
    partial void UpdateGenre(Genre instance);
    partial void DeleteGenre(Genre instance);
    partial void InsertGoal(Goal instance);
    partial void UpdateGoal(Goal instance);
    partial void DeleteGoal(Goal instance);
    partial void InsertGoalType(GoalType instance);
    partial void UpdateGoalType(GoalType instance);
    partial void DeleteGoalType(GoalType instance);
    partial void InsertLinkSource(LinkSource instance);
    partial void UpdateLinkSource(LinkSource instance);
    partial void DeleteLinkSource(LinkSource instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertPrivacyLevel(PrivacyLevel instance);
    partial void UpdatePrivacyLevel(PrivacyLevel instance);
    partial void DeletePrivacyLevel(PrivacyLevel instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductType(ProductType instance);
    partial void UpdateProductType(ProductType instance);
    partial void DeleteProductType(ProductType instance);
    partial void InsertPurchase(Purchase instance);
    partial void UpdatePurchase(Purchase instance);
    partial void DeletePurchase(Purchase instance);
    partial void InsertRef_AlbumFile(Ref_AlbumFile instance);
    partial void UpdateRef_AlbumFile(Ref_AlbumFile instance);
    partial void DeleteRef_AlbumFile(Ref_AlbumFile instance);
    partial void InsertRef_AlbumTag(Ref_AlbumTag instance);
    partial void UpdateRef_AlbumTag(Ref_AlbumTag instance);
    partial void DeleteRef_AlbumTag(Ref_AlbumTag instance);
    partial void InsertRef_CampaignAlbum(Ref_CampaignAlbum instance);
    partial void UpdateRef_CampaignAlbum(Ref_CampaignAlbum instance);
    partial void DeleteRef_CampaignAlbum(Ref_CampaignAlbum instance);
    partial void InsertRef_CampaignGoal(Ref_CampaignGoal instance);
    partial void UpdateRef_CampaignGoal(Ref_CampaignGoal instance);
    partial void DeleteRef_CampaignGoal(Ref_CampaignGoal instance);
    partial void InsertRef_CampaignLink(Ref_CampaignLink instance);
    partial void UpdateRef_CampaignLink(Ref_CampaignLink instance);
    partial void DeleteRef_CampaignLink(Ref_CampaignLink instance);
    partial void InsertRef_CampaignTag(Ref_CampaignTag instance);
    partial void UpdateRef_CampaignTag(Ref_CampaignTag instance);
    partial void DeleteRef_CampaignTag(Ref_CampaignTag instance);
    partial void InsertRef_CampaignUser(Ref_CampaignUser instance);
    partial void UpdateRef_CampaignUser(Ref_CampaignUser instance);
    partial void DeleteRef_CampaignUser(Ref_CampaignUser instance);
    partial void InsertRef_FeaturedCampaign(Ref_FeaturedCampaign instance);
    partial void UpdateRef_FeaturedCampaign(Ref_FeaturedCampaign instance);
    partial void DeleteRef_FeaturedCampaign(Ref_FeaturedCampaign instance);
    partial void InsertRef_FileTag(Ref_FileTag instance);
    partial void UpdateRef_FileTag(Ref_FileTag instance);
    partial void DeleteRef_FileTag(Ref_FileTag instance);
    partial void InsertRef_GoalReward(Ref_GoalReward instance);
    partial void UpdateRef_GoalReward(Ref_GoalReward instance);
    partial void DeleteRef_GoalReward(Ref_GoalReward instance);
    partial void InsertRef_UserAlbum(Ref_UserAlbum instance);
    partial void UpdateRef_UserAlbum(Ref_UserAlbum instance);
    partial void DeleteRef_UserAlbum(Ref_UserAlbum instance);
    partial void InsertRef_UserLink(Ref_UserLink instance);
    partial void UpdateRef_UserLink(Ref_UserLink instance);
    partial void DeleteRef_UserLink(Ref_UserLink instance);
    partial void InsertReward(Reward instance);
    partial void UpdateReward(Reward instance);
    partial void DeleteReward(Reward instance);
    partial void InsertRewardType(RewardType instance);
    partial void UpdateRewardType(RewardType instance);
    partial void DeleteRewardType(RewardType instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    partial void InsertTransaction(Transaction instance);
    partial void UpdateTransaction(Transaction instance);
    partial void DeleteTransaction(Transaction instance);
    partial void InsertTransactionType(TransactionType instance);
    partial void UpdateTransactionType(TransactionType instance);
    partial void DeleteTransactionType(TransactionType instance);
    partial void InsertUserAddr(UserAddr instance);
    partial void UpdateUserAddr(UserAddr instance);
    partial void DeleteUserAddr(UserAddr instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void Insertwebpages_Membership(webpages_Membership instance);
    partial void Updatewebpages_Membership(webpages_Membership instance);
    partial void Deletewebpages_Membership(webpages_Membership instance);
    partial void Insertwebpages_OAuthMembership(webpages_OAuthMembership instance);
    partial void Updatewebpages_OAuthMembership(webpages_OAuthMembership instance);
    partial void Deletewebpages_OAuthMembership(webpages_OAuthMembership instance);
    partial void Insertwebpages_Role(webpages_Role instance);
    partial void Updatewebpages_Role(webpages_Role instance);
    partial void Deletewebpages_Role(webpages_Role instance);
    partial void Insertwebpages_UsersInRole(webpages_UsersInRole instance);
    partial void Updatewebpages_UsersInRole(webpages_UsersInRole instance);
    partial void Deletewebpages_UsersInRole(webpages_UsersInRole instance);
    #endregion
		
		public SignyourselfDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SignYourselfConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SignyourselfDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SignyourselfDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SignyourselfDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SignyourselfDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Activity> Activities
		{
			get
			{
				return this.GetTable<Activity>();
			}
		}
		
		public System.Data.Linq.Table<ActivityType> ActivityTypes
		{
			get
			{
				return this.GetTable<ActivityType>();
			}
		}
		
		public System.Data.Linq.Table<Album> Albums
		{
			get
			{
				return this.GetTable<Album>();
			}
		}
		
		public System.Data.Linq.Table<AlbumType> AlbumTypes
		{
			get
			{
				return this.GetTable<AlbumType>();
			}
		}
		
		public System.Data.Linq.Table<Campaign_Users_RelationshipType> Campaign_Users_RelationshipTypes
		{
			get
			{
				return this.GetTable<Campaign_Users_RelationshipType>();
			}
		}
		
		public System.Data.Linq.Table<CampaignComment> CampaignComments
		{
			get
			{
				return this.GetTable<CampaignComment>();
			}
		}
		
		public System.Data.Linq.Table<CampaignReview> CampaignReviews
		{
			get
			{
				return this.GetTable<CampaignReview>();
			}
		}
		
		public System.Data.Linq.Table<Campaign> Campaigns
		{
			get
			{
				return this.GetTable<Campaign>();
			}
		}
		
		public System.Data.Linq.Table<CampaignType> CampaignTypes
		{
			get
			{
				return this.GetTable<CampaignType>();
			}
		}
		
		public System.Data.Linq.Table<CampaignUpdate> CampaignUpdates
		{
			get
			{
				return this.GetTable<CampaignUpdate>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<File> Files
		{
			get
			{
				return this.GetTable<File>();
			}
		}
		
		public System.Data.Linq.Table<FileType> FileTypes
		{
			get
			{
				return this.GetTable<FileType>();
			}
		}
		
		public System.Data.Linq.Table<Genre> Genres
		{
			get
			{
				return this.GetTable<Genre>();
			}
		}
		
		public System.Data.Linq.Table<Goal> Goals
		{
			get
			{
				return this.GetTable<Goal>();
			}
		}
		
		public System.Data.Linq.Table<GoalType> GoalTypes
		{
			get
			{
				return this.GetTable<GoalType>();
			}
		}
		
		public System.Data.Linq.Table<LinkSource> LinkSources
		{
			get
			{
				return this.GetTable<LinkSource>();
			}
		}
		
		public System.Data.Linq.Table<Message> Messages
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<PrivacyLevel> PrivacyLevels
		{
			get
			{
				return this.GetTable<PrivacyLevel>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductType> ProductTypes
		{
			get
			{
				return this.GetTable<ProductType>();
			}
		}
		
		public System.Data.Linq.Table<Purchase> Purchases
		{
			get
			{
				return this.GetTable<Purchase>();
			}
		}
		
		public System.Data.Linq.Table<Ref_AlbumFile> Ref_AlbumFiles
		{
			get
			{
				return this.GetTable<Ref_AlbumFile>();
			}
		}
		
		public System.Data.Linq.Table<Ref_AlbumTag> Ref_AlbumTags
		{
			get
			{
				return this.GetTable<Ref_AlbumTag>();
			}
		}
		
		public System.Data.Linq.Table<Ref_CampaignAlbum> Ref_CampaignAlbums
		{
			get
			{
				return this.GetTable<Ref_CampaignAlbum>();
			}
		}
		
		public System.Data.Linq.Table<Ref_CampaignGoal> Ref_CampaignGoals
		{
			get
			{
				return this.GetTable<Ref_CampaignGoal>();
			}
		}
		
		public System.Data.Linq.Table<Ref_CampaignLink> Ref_CampaignLinks
		{
			get
			{
				return this.GetTable<Ref_CampaignLink>();
			}
		}
		
		public System.Data.Linq.Table<Ref_CampaignTag> Ref_CampaignTags
		{
			get
			{
				return this.GetTable<Ref_CampaignTag>();
			}
		}
		
		public System.Data.Linq.Table<Ref_CampaignUser> Ref_CampaignUsers
		{
			get
			{
				return this.GetTable<Ref_CampaignUser>();
			}
		}
		
		public System.Data.Linq.Table<Ref_FeaturedCampaign> Ref_FeaturedCampaigns
		{
			get
			{
				return this.GetTable<Ref_FeaturedCampaign>();
			}
		}
		
		public System.Data.Linq.Table<Ref_FileTag> Ref_FileTags
		{
			get
			{
				return this.GetTable<Ref_FileTag>();
			}
		}
		
		public System.Data.Linq.Table<Ref_GoalReward> Ref_GoalRewards
		{
			get
			{
				return this.GetTable<Ref_GoalReward>();
			}
		}
		
		public System.Data.Linq.Table<Ref_UserAlbum> Ref_UserAlbums
		{
			get
			{
				return this.GetTable<Ref_UserAlbum>();
			}
		}
		
		public System.Data.Linq.Table<Ref_UserLink> Ref_UserLinks
		{
			get
			{
				return this.GetTable<Ref_UserLink>();
			}
		}
		
		public System.Data.Linq.Table<Reward> Rewards
		{
			get
			{
				return this.GetTable<Reward>();
			}
		}
		
		public System.Data.Linq.Table<RewardType> RewardTypes
		{
			get
			{
				return this.GetTable<RewardType>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tags
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
		
		public System.Data.Linq.Table<Transaction> Transactions
		{
			get
			{
				return this.GetTable<Transaction>();
			}
		}
		
		public System.Data.Linq.Table<TransactionType> TransactionTypes
		{
			get
			{
				return this.GetTable<TransactionType>();
			}
		}
		
		public System.Data.Linq.Table<UserAddr> UserAddrs
		{
			get
			{
				return this.GetTable<UserAddr>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfiles
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<webpages_Membership> webpages_Memberships
		{
			get
			{
				return this.GetTable<webpages_Membership>();
			}
		}
		
		public System.Data.Linq.Table<webpages_OAuthMembership> webpages_OAuthMemberships
		{
			get
			{
				return this.GetTable<webpages_OAuthMembership>();
			}
		}
		
		public System.Data.Linq.Table<webpages_Role> webpages_Roles
		{
			get
			{
				return this.GetTable<webpages_Role>();
			}
		}
		
		public System.Data.Linq.Table<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this.GetTable<webpages_UsersInRole>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _UserID;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateClosed;
		
		private int _CurrentBalance;
		
		private EntitySet<Campaign> _Campaigns;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateClosedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateClosedChanged();
    partial void OnCurrentBalanceChanging(int value);
    partial void OnCurrentBalanceChanged();
    #endregion
		
		public Account()
		{
			this._Campaigns = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campaigns), new Action<Campaign>(this.detach_Campaigns));
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateClosed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateClosed
		{
			get
			{
				return this._DateClosed;
			}
			set
			{
				if ((this._DateClosed != value))
				{
					this.OnDateClosedChanging(value);
					this.SendPropertyChanging();
					this._DateClosed = value;
					this.SendPropertyChanged("DateClosed");
					this.OnDateClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentBalance", DbType="Int NOT NULL")]
		public int CurrentBalance
		{
			get
			{
				return this._CurrentBalance;
			}
			set
			{
				if ((this._CurrentBalance != value))
				{
					this.OnCurrentBalanceChanging(value);
					this.SendPropertyChanging();
					this._CurrentBalance = value;
					this.SendPropertyChanged("CurrentBalance");
					this.OnCurrentBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Campaign", Storage="_Campaigns", ThisKey="AccountID", OtherKey="AccountId")]
		public EntitySet<Campaign> Campaigns
		{
			get
			{
				return this._Campaigns;
			}
			set
			{
				this._Campaigns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Transaction", Storage="_Transactions", ThisKey="AccountID", OtherKey="AccountID")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Account", Storage="_UserProfile", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activity")]
	public partial class Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivityID;
		
		private int _ActivityTypeID;
		
		private string _Comment;
		
		private int _UserID;
		
		private int _itemID;
		
		private System.DateTime _DateTime;
		
		private EntityRef<ActivityType> _ActivityType;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityIDChanging(int value);
    partial void OnActivityIDChanged();
    partial void OnActivityTypeIDChanging(int value);
    partial void OnActivityTypeIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnitemIDChanging(int value);
    partial void OnitemIDChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    #endregion
		
		public Activity()
		{
			this._ActivityType = default(EntityRef<ActivityType>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this.OnActivityIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityID = value;
					this.SendPropertyChanged("ActivityID");
					this.OnActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityTypeID", DbType="Int NOT NULL")]
		public int ActivityTypeID
		{
			get
			{
				return this._ActivityTypeID;
			}
			set
			{
				if ((this._ActivityTypeID != value))
				{
					if (this._ActivityType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActivityTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityTypeID = value;
					this.SendPropertyChanged("ActivityTypeID");
					this.OnActivityTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemID", DbType="Int NOT NULL")]
		public int itemID
		{
			get
			{
				return this._itemID;
			}
			set
			{
				if ((this._itemID != value))
				{
					this.OnitemIDChanging(value);
					this.SendPropertyChanging();
					this._itemID = value;
					this.SendPropertyChanged("itemID");
					this.OnitemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityType_Activity", Storage="_ActivityType", ThisKey="ActivityTypeID", OtherKey="ActivityTypeID", IsForeignKey=true)]
		public ActivityType ActivityType
		{
			get
			{
				return this._ActivityType.Entity;
			}
			set
			{
				ActivityType previousValue = this._ActivityType.Entity;
				if (((previousValue != value) 
							|| (this._ActivityType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActivityType.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._ActivityType.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._ActivityTypeID = value.ActivityTypeID;
					}
					else
					{
						this._ActivityTypeID = default(int);
					}
					this.SendPropertyChanged("ActivityType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Activity", Storage="_UserProfile", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Activities.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Activities.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActivityTypes")]
	public partial class ActivityType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivityTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Activity> _Activities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityTypeIDChanging(int value);
    partial void OnActivityTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ActivityType()
		{
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ActivityTypeID
		{
			get
			{
				return this._ActivityTypeID;
			}
			set
			{
				if ((this._ActivityTypeID != value))
				{
					this.OnActivityTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityTypeID = value;
					this.SendPropertyChanged("ActivityTypeID");
					this.OnActivityTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActivityType_Activity", Storage="_Activities", ThisKey="ActivityTypeID", OtherKey="ActivityTypeID")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.ActivityType = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.ActivityType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Album")]
	public partial class Album : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AlbumId;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<int> _AlbumTypeID;
		
		private System.Nullable<int> _PrivacyLevelId;
		
		private System.Nullable<int> _UserId;
		
		private EntitySet<Ref_AlbumFile> _Ref_AlbumFiles;
		
		private EntitySet<Ref_AlbumTag> _Ref_AlbumTags;
		
		private EntitySet<Ref_CampaignAlbum> _Ref_CampaignAlbums;
		
		private EntitySet<Ref_UserAlbum> _Ref_UserAlbums;
		
		private EntityRef<AlbumType> _AlbumType;
		
		private EntityRef<PrivacyLevel> _PrivacyLevel;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlbumIdChanging(int value);
    partial void OnAlbumIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnAlbumTypeIDChanging(System.Nullable<int> value);
    partial void OnAlbumTypeIDChanged();
    partial void OnPrivacyLevelIdChanging(System.Nullable<int> value);
    partial void OnPrivacyLevelIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    #endregion
		
		public Album()
		{
			this._Ref_AlbumFiles = new EntitySet<Ref_AlbumFile>(new Action<Ref_AlbumFile>(this.attach_Ref_AlbumFiles), new Action<Ref_AlbumFile>(this.detach_Ref_AlbumFiles));
			this._Ref_AlbumTags = new EntitySet<Ref_AlbumTag>(new Action<Ref_AlbumTag>(this.attach_Ref_AlbumTags), new Action<Ref_AlbumTag>(this.detach_Ref_AlbumTags));
			this._Ref_CampaignAlbums = new EntitySet<Ref_CampaignAlbum>(new Action<Ref_CampaignAlbum>(this.attach_Ref_CampaignAlbums), new Action<Ref_CampaignAlbum>(this.detach_Ref_CampaignAlbums));
			this._Ref_UserAlbums = new EntitySet<Ref_UserAlbum>(new Action<Ref_UserAlbum>(this.attach_Ref_UserAlbums), new Action<Ref_UserAlbum>(this.detach_Ref_UserAlbums));
			this._AlbumType = default(EntityRef<AlbumType>);
			this._PrivacyLevel = default(EntityRef<PrivacyLevel>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AlbumId
		{
			get
			{
				return this._AlbumId;
			}
			set
			{
				if ((this._AlbumId != value))
				{
					this.OnAlbumIdChanging(value);
					this.SendPropertyChanging();
					this._AlbumId = value;
					this.SendPropertyChanged("AlbumId");
					this.OnAlbumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumTypeID", DbType="Int")]
		public System.Nullable<int> AlbumTypeID
		{
			get
			{
				return this._AlbumTypeID;
			}
			set
			{
				if ((this._AlbumTypeID != value))
				{
					if (this._AlbumType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlbumTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumTypeID = value;
					this.SendPropertyChanged("AlbumTypeID");
					this.OnAlbumTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivacyLevelId", DbType="Int")]
		public System.Nullable<int> PrivacyLevelId
		{
			get
			{
				return this._PrivacyLevelId;
			}
			set
			{
				if ((this._PrivacyLevelId != value))
				{
					if (this._PrivacyLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrivacyLevelIdChanging(value);
					this.SendPropertyChanging();
					this._PrivacyLevelId = value;
					this.SendPropertyChanged("PrivacyLevelId");
					this.OnPrivacyLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_Ref_AlbumFile", Storage="_Ref_AlbumFiles", ThisKey="AlbumId", OtherKey="AlbumID")]
		public EntitySet<Ref_AlbumFile> Ref_AlbumFiles
		{
			get
			{
				return this._Ref_AlbumFiles;
			}
			set
			{
				this._Ref_AlbumFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_Ref_AlbumTag", Storage="_Ref_AlbumTags", ThisKey="AlbumId", OtherKey="AlbumID")]
		public EntitySet<Ref_AlbumTag> Ref_AlbumTags
		{
			get
			{
				return this._Ref_AlbumTags;
			}
			set
			{
				this._Ref_AlbumTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_Ref_CampaignAlbum", Storage="_Ref_CampaignAlbums", ThisKey="AlbumId", OtherKey="AlbumID")]
		public EntitySet<Ref_CampaignAlbum> Ref_CampaignAlbums
		{
			get
			{
				return this._Ref_CampaignAlbums;
			}
			set
			{
				this._Ref_CampaignAlbums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_Ref_UserAlbum", Storage="_Ref_UserAlbums", ThisKey="AlbumId", OtherKey="AlbumID")]
		public EntitySet<Ref_UserAlbum> Ref_UserAlbums
		{
			get
			{
				return this._Ref_UserAlbums;
			}
			set
			{
				this._Ref_UserAlbums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AlbumType_Album", Storage="_AlbumType", ThisKey="AlbumTypeID", OtherKey="AlbumTypeID", IsForeignKey=true)]
		public AlbumType AlbumType
		{
			get
			{
				return this._AlbumType.Entity;
			}
			set
			{
				AlbumType previousValue = this._AlbumType.Entity;
				if (((previousValue != value) 
							|| (this._AlbumType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AlbumType.Entity = null;
						previousValue.Albums.Remove(this);
					}
					this._AlbumType.Entity = value;
					if ((value != null))
					{
						value.Albums.Add(this);
						this._AlbumTypeID = value.AlbumTypeID;
					}
					else
					{
						this._AlbumTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AlbumType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrivacyLevel_Album", Storage="_PrivacyLevel", ThisKey="PrivacyLevelId", OtherKey="PrivacyLevelID", IsForeignKey=true)]
		public PrivacyLevel PrivacyLevel
		{
			get
			{
				return this._PrivacyLevel.Entity;
			}
			set
			{
				PrivacyLevel previousValue = this._PrivacyLevel.Entity;
				if (((previousValue != value) 
							|| (this._PrivacyLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrivacyLevel.Entity = null;
						previousValue.Albums.Remove(this);
					}
					this._PrivacyLevel.Entity = value;
					if ((value != null))
					{
						value.Albums.Add(this);
						this._PrivacyLevelId = value.PrivacyLevelID;
					}
					else
					{
						this._PrivacyLevelId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PrivacyLevel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Album", Storage="_UserProfile", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Albums.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Albums.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ref_AlbumFiles(Ref_AlbumFile entity)
		{
			this.SendPropertyChanging();
			entity.Album = this;
		}
		
		private void detach_Ref_AlbumFiles(Ref_AlbumFile entity)
		{
			this.SendPropertyChanging();
			entity.Album = null;
		}
		
		private void attach_Ref_AlbumTags(Ref_AlbumTag entity)
		{
			this.SendPropertyChanging();
			entity.Album = this;
		}
		
		private void detach_Ref_AlbumTags(Ref_AlbumTag entity)
		{
			this.SendPropertyChanging();
			entity.Album = null;
		}
		
		private void attach_Ref_CampaignAlbums(Ref_CampaignAlbum entity)
		{
			this.SendPropertyChanging();
			entity.Album = this;
		}
		
		private void detach_Ref_CampaignAlbums(Ref_CampaignAlbum entity)
		{
			this.SendPropertyChanging();
			entity.Album = null;
		}
		
		private void attach_Ref_UserAlbums(Ref_UserAlbum entity)
		{
			this.SendPropertyChanging();
			entity.Album = this;
		}
		
		private void detach_Ref_UserAlbums(Ref_UserAlbum entity)
		{
			this.SendPropertyChanging();
			entity.Album = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlbumTypes")]
	public partial class AlbumType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AlbumTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Album> _Albums;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlbumTypeIDChanging(int value);
    partial void OnAlbumTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public AlbumType()
		{
			this._Albums = new EntitySet<Album>(new Action<Album>(this.attach_Albums), new Action<Album>(this.detach_Albums));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AlbumTypeID
		{
			get
			{
				return this._AlbumTypeID;
			}
			set
			{
				if ((this._AlbumTypeID != value))
				{
					this.OnAlbumTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumTypeID = value;
					this.SendPropertyChanged("AlbumTypeID");
					this.OnAlbumTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AlbumType_Album", Storage="_Albums", ThisKey="AlbumTypeID", OtherKey="AlbumTypeID")]
		public EntitySet<Album> Albums
		{
			get
			{
				return this._Albums;
			}
			set
			{
				this._Albums.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Albums(Album entity)
		{
			this.SendPropertyChanging();
			entity.AlbumType = this;
		}
		
		private void detach_Albums(Album entity)
		{
			this.SendPropertyChanging();
			entity.AlbumType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Campaign_Users_RelationshipTypes")]
	public partial class Campaign_Users_RelationshipType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RelationshipTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Ref_CampaignUser> _Ref_CampaignUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelationshipTypeIDChanging(int value);
    partial void OnRelationshipTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Campaign_Users_RelationshipType()
		{
			this._Ref_CampaignUsers = new EntitySet<Ref_CampaignUser>(new Action<Ref_CampaignUser>(this.attach_Ref_CampaignUsers), new Action<Ref_CampaignUser>(this.detach_Ref_CampaignUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationshipTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RelationshipTypeID
		{
			get
			{
				return this._RelationshipTypeID;
			}
			set
			{
				if ((this._RelationshipTypeID != value))
				{
					this.OnRelationshipTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RelationshipTypeID = value;
					this.SendPropertyChanged("RelationshipTypeID");
					this.OnRelationshipTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Users_RelationshipType_Ref_CampaignUser", Storage="_Ref_CampaignUsers", ThisKey="RelationshipTypeID", OtherKey="RelationshipTypeID")]
		public EntitySet<Ref_CampaignUser> Ref_CampaignUsers
		{
			get
			{
				return this._Ref_CampaignUsers;
			}
			set
			{
				this._Ref_CampaignUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ref_CampaignUsers(Ref_CampaignUser entity)
		{
			this.SendPropertyChanging();
			entity.Campaign_Users_RelationshipType = this;
		}
		
		private void detach_Ref_CampaignUsers(Ref_CampaignUser entity)
		{
			this.SendPropertyChanging();
			entity.Campaign_Users_RelationshipType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignComments")]
	public partial class CampaignComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignCommentID;
		
		private int _CampaignID;
		
		private int _UserId;
		
		private string _Title;
		
		private string _Content;
		
		private System.DateTime _DateCreated;
		
		private bool _Approved;
		
		private System.Nullable<int> _InReplyTo;
		
		private bool _isSpam;
		
		private System.Nullable<bool> _Spaminess;
		
		private bool _ReplyEnabled;
		
		private EntityRef<Campaign> _Campaign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignCommentIDChanging(int value);
    partial void OnCampaignCommentIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnApprovedChanging(bool value);
    partial void OnApprovedChanged();
    partial void OnInReplyToChanging(System.Nullable<int> value);
    partial void OnInReplyToChanged();
    partial void OnisSpamChanging(bool value);
    partial void OnisSpamChanged();
    partial void OnSpaminessChanging(System.Nullable<bool> value);
    partial void OnSpaminessChanged();
    partial void OnReplyEnabledChanging(bool value);
    partial void OnReplyEnabledChanged();
    #endregion
		
		public CampaignComment()
		{
			this._Campaign = default(EntityRef<Campaign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignCommentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CampaignCommentID
		{
			get
			{
				return this._CampaignCommentID;
			}
			set
			{
				if ((this._CampaignCommentID != value))
				{
					this.OnCampaignCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignCommentID = value;
					this.SendPropertyChanged("CampaignCommentID");
					this.OnCampaignCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit NOT NULL")]
		public bool Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InReplyTo", DbType="Int")]
		public System.Nullable<int> InReplyTo
		{
			get
			{
				return this._InReplyTo;
			}
			set
			{
				if ((this._InReplyTo != value))
				{
					this.OnInReplyToChanging(value);
					this.SendPropertyChanging();
					this._InReplyTo = value;
					this.SendPropertyChanged("InReplyTo");
					this.OnInReplyToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSpam", DbType="Bit NOT NULL")]
		public bool isSpam
		{
			get
			{
				return this._isSpam;
			}
			set
			{
				if ((this._isSpam != value))
				{
					this.OnisSpamChanging(value);
					this.SendPropertyChanging();
					this._isSpam = value;
					this.SendPropertyChanged("isSpam");
					this.OnisSpamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spaminess", DbType="Bit")]
		public System.Nullable<bool> Spaminess
		{
			get
			{
				return this._Spaminess;
			}
			set
			{
				if ((this._Spaminess != value))
				{
					this.OnSpaminessChanging(value);
					this.SendPropertyChanging();
					this._Spaminess = value;
					this.SendPropertyChanged("Spaminess");
					this.OnSpaminessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyEnabled", DbType="Bit NOT NULL")]
		public bool ReplyEnabled
		{
			get
			{
				return this._ReplyEnabled;
			}
			set
			{
				if ((this._ReplyEnabled != value))
				{
					this.OnReplyEnabledChanging(value);
					this.SendPropertyChanging();
					this._ReplyEnabled = value;
					this.SendPropertyChanged("ReplyEnabled");
					this.OnReplyEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignComment", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.CampaignComments.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.CampaignComments.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignReviews")]
	public partial class CampaignReview : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignReviewID;
		
		private int _CampaignID;
		
		private int _UserId;
		
		private string _Title;
		
		private string _Content;
		
		private System.DateTime _DateCreated;
		
		private bool _Approved;
		
		private System.Nullable<int> _InReplyTo;
		
		private bool _PayLocked;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<double> _Rating;
		
		private bool _ReplyEnabled;
		
		private EntityRef<Campaign> _Campaign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignReviewIDChanging(int value);
    partial void OnCampaignReviewIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnApprovedChanging(bool value);
    partial void OnApprovedChanged();
    partial void OnInReplyToChanging(System.Nullable<int> value);
    partial void OnInReplyToChanged();
    partial void OnPayLockedChanging(bool value);
    partial void OnPayLockedChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnRatingChanging(System.Nullable<double> value);
    partial void OnRatingChanged();
    partial void OnReplyEnabledChanging(bool value);
    partial void OnReplyEnabledChanged();
    #endregion
		
		public CampaignReview()
		{
			this._Campaign = default(EntityRef<Campaign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignReviewID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CampaignReviewID
		{
			get
			{
				return this._CampaignReviewID;
			}
			set
			{
				if ((this._CampaignReviewID != value))
				{
					this.OnCampaignReviewIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignReviewID = value;
					this.SendPropertyChanged("CampaignReviewID");
					this.OnCampaignReviewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit NOT NULL")]
		public bool Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InReplyTo", DbType="Int")]
		public System.Nullable<int> InReplyTo
		{
			get
			{
				return this._InReplyTo;
			}
			set
			{
				if ((this._InReplyTo != value))
				{
					this.OnInReplyToChanging(value);
					this.SendPropertyChanging();
					this._InReplyTo = value;
					this.SendPropertyChanged("InReplyTo");
					this.OnInReplyToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayLocked", DbType="Bit NOT NULL")]
		public bool PayLocked
		{
			get
			{
				return this._PayLocked;
			}
			set
			{
				if ((this._PayLocked != value))
				{
					this.OnPayLockedChanging(value);
					this.SendPropertyChanging();
					this._PayLocked = value;
					this.SendPropertyChanged("PayLocked");
					this.OnPayLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Money")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Float")]
		public System.Nullable<double> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyEnabled", DbType="Bit NOT NULL")]
		public bool ReplyEnabled
		{
			get
			{
				return this._ReplyEnabled;
			}
			set
			{
				if ((this._ReplyEnabled != value))
				{
					this.OnReplyEnabledChanging(value);
					this.SendPropertyChanging();
					this._ReplyEnabled = value;
					this.SendPropertyChanged("ReplyEnabled");
					this.OnReplyEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignReview", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.CampaignReviews.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.CampaignReviews.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Campaigns")]
	public partial class Campaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignID;
		
		private string _Name;
		
		private int _CampaignTypeId;
		
		private string _Description;
		
		private System.DateTime _DateCreated;
		
		private int _UserId;
		
		private bool _Active;
		
		private bool _Appoved;
		
		private string _URL;
		
		private string _Email;
		
		private string _Location;
		
		private System.DateTime _EndDate;
		
		private System.Nullable<int> _MainFileID;
		
		private System.Nullable<int> _GoalFileID;
		
		private System.Nullable<int> _SupportersFileID;
		
		private System.Nullable<int> _AccountId;
		
		private int _GenreID;
		
		private string _Intro;
		
		private string _SusURL;
		
		private EntitySet<CampaignComment> _CampaignComments;
		
		private EntitySet<CampaignReview> _CampaignReviews;
		
		private EntitySet<CampaignUpdate> _CampaignUpdates;
		
		private EntitySet<Ref_CampaignAlbum> _Ref_CampaignAlbums;
		
		private EntitySet<Ref_CampaignGoal> _Ref_CampaignGoals;
		
		private EntitySet<Ref_CampaignLink> _Ref_CampaignLinks;
		
		private EntitySet<Ref_CampaignTag> _Ref_CampaignTags;
		
		private EntitySet<Ref_CampaignUser> _Ref_CampaignUsers;
		
		private EntitySet<Ref_FeaturedCampaign> _Ref_FeaturedCampaigns;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<CampaignType> _CampaignType;
		
		private EntityRef<File> _File;
		
		private EntityRef<File> _File1;
		
		private EntityRef<File> _File2;
		
		private EntityRef<Genre> _Genre;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCampaignTypeIdChanging(int value);
    partial void OnCampaignTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnAppovedChanging(bool value);
    partial void OnAppovedChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnMainFileIDChanging(System.Nullable<int> value);
    partial void OnMainFileIDChanged();
    partial void OnGoalFileIDChanging(System.Nullable<int> value);
    partial void OnGoalFileIDChanged();
    partial void OnSupportersFileIDChanging(System.Nullable<int> value);
    partial void OnSupportersFileIDChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    partial void OnGenreIDChanging(int value);
    partial void OnGenreIDChanged();
    partial void OnIntroChanging(string value);
    partial void OnIntroChanged();
    partial void OnSusURLChanging(string value);
    partial void OnSusURLChanged();
    #endregion
		
		public Campaign()
		{
			this._CampaignComments = new EntitySet<CampaignComment>(new Action<CampaignComment>(this.attach_CampaignComments), new Action<CampaignComment>(this.detach_CampaignComments));
			this._CampaignReviews = new EntitySet<CampaignReview>(new Action<CampaignReview>(this.attach_CampaignReviews), new Action<CampaignReview>(this.detach_CampaignReviews));
			this._CampaignUpdates = new EntitySet<CampaignUpdate>(new Action<CampaignUpdate>(this.attach_CampaignUpdates), new Action<CampaignUpdate>(this.detach_CampaignUpdates));
			this._Ref_CampaignAlbums = new EntitySet<Ref_CampaignAlbum>(new Action<Ref_CampaignAlbum>(this.attach_Ref_CampaignAlbums), new Action<Ref_CampaignAlbum>(this.detach_Ref_CampaignAlbums));
			this._Ref_CampaignGoals = new EntitySet<Ref_CampaignGoal>(new Action<Ref_CampaignGoal>(this.attach_Ref_CampaignGoals), new Action<Ref_CampaignGoal>(this.detach_Ref_CampaignGoals));
			this._Ref_CampaignLinks = new EntitySet<Ref_CampaignLink>(new Action<Ref_CampaignLink>(this.attach_Ref_CampaignLinks), new Action<Ref_CampaignLink>(this.detach_Ref_CampaignLinks));
			this._Ref_CampaignTags = new EntitySet<Ref_CampaignTag>(new Action<Ref_CampaignTag>(this.attach_Ref_CampaignTags), new Action<Ref_CampaignTag>(this.detach_Ref_CampaignTags));
			this._Ref_CampaignUsers = new EntitySet<Ref_CampaignUser>(new Action<Ref_CampaignUser>(this.attach_Ref_CampaignUsers), new Action<Ref_CampaignUser>(this.detach_Ref_CampaignUsers));
			this._Ref_FeaturedCampaigns = new EntitySet<Ref_FeaturedCampaign>(new Action<Ref_FeaturedCampaign>(this.attach_Ref_FeaturedCampaigns), new Action<Ref_FeaturedCampaign>(this.detach_Ref_FeaturedCampaigns));
			this._Account = default(EntityRef<Account>);
			this._CampaignType = default(EntityRef<CampaignType>);
			this._File = default(EntityRef<File>);
			this._File1 = default(EntityRef<File>);
			this._File2 = default(EntityRef<File>);
			this._Genre = default(EntityRef<Genre>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignTypeId", DbType="Int NOT NULL")]
		public int CampaignTypeId
		{
			get
			{
				return this._CampaignTypeId;
			}
			set
			{
				if ((this._CampaignTypeId != value))
				{
					if (this._CampaignType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CampaignTypeId = value;
					this.SendPropertyChanged("CampaignTypeId");
					this.OnCampaignTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Appoved", DbType="Bit NOT NULL")]
		public bool Appoved
		{
			get
			{
				return this._Appoved;
			}
			set
			{
				if ((this._Appoved != value))
				{
					this.OnAppovedChanging(value);
					this.SendPropertyChanging();
					this._Appoved = value;
					this.SendPropertyChanged("Appoved");
					this.OnAppovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(256)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainFileID", DbType="Int")]
		public System.Nullable<int> MainFileID
		{
			get
			{
				return this._MainFileID;
			}
			set
			{
				if ((this._MainFileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainFileIDChanging(value);
					this.SendPropertyChanging();
					this._MainFileID = value;
					this.SendPropertyChanged("MainFileID");
					this.OnMainFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalFileID", DbType="Int")]
		public System.Nullable<int> GoalFileID
		{
			get
			{
				return this._GoalFileID;
			}
			set
			{
				if ((this._GoalFileID != value))
				{
					if (this._File1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoalFileIDChanging(value);
					this.SendPropertyChanging();
					this._GoalFileID = value;
					this.SendPropertyChanged("GoalFileID");
					this.OnGoalFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupportersFileID", DbType="Int")]
		public System.Nullable<int> SupportersFileID
		{
			get
			{
				return this._SupportersFileID;
			}
			set
			{
				if ((this._SupportersFileID != value))
				{
					if (this._File2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupportersFileIDChanging(value);
					this.SendPropertyChanging();
					this._SupportersFileID = value;
					this.SendPropertyChanged("SupportersFileID");
					this.OnSupportersFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenreID", DbType="Int NOT NULL")]
		public int GenreID
		{
			get
			{
				return this._GenreID;
			}
			set
			{
				if ((this._GenreID != value))
				{
					if (this._Genre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenreIDChanging(value);
					this.SendPropertyChanging();
					this._GenreID = value;
					this.SendPropertyChanged("GenreID");
					this.OnGenreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Intro", DbType="NVarChar(50)")]
		public string Intro
		{
			get
			{
				return this._Intro;
			}
			set
			{
				if ((this._Intro != value))
				{
					this.OnIntroChanging(value);
					this.SendPropertyChanging();
					this._Intro = value;
					this.SendPropertyChanged("Intro");
					this.OnIntroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SusURL", DbType="NVarChar(500)")]
		public string SusURL
		{
			get
			{
				return this._SusURL;
			}
			set
			{
				if ((this._SusURL != value))
				{
					this.OnSusURLChanging(value);
					this.SendPropertyChanging();
					this._SusURL = value;
					this.SendPropertyChanged("SusURL");
					this.OnSusURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignComment", Storage="_CampaignComments", ThisKey="CampaignID", OtherKey="CampaignID")]
		public EntitySet<CampaignComment> CampaignComments
		{
			get
			{
				return this._CampaignComments;
			}
			set
			{
				this._CampaignComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignReview", Storage="_CampaignReviews", ThisKey="CampaignID", OtherKey="CampaignID")]
		public EntitySet<CampaignReview> CampaignReviews
		{
			get
			{
				return this._CampaignReviews;
			}
			set
			{
				this._CampaignReviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignUpdate", Storage="_CampaignUpdates", ThisKey="CampaignID", OtherKey="CampaignID")]
		public EntitySet<CampaignUpdate> CampaignUpdates
		{
			get
			{
				return this._CampaignUpdates;
			}
			set
			{
				this._CampaignUpdates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Ref_CampaignAlbum", Storage="_Ref_CampaignAlbums", ThisKey="CampaignID", OtherKey="CampaignID")]
		public EntitySet<Ref_CampaignAlbum> Ref_CampaignAlbums
		{
			get
			{
				return this._Ref_CampaignAlbums;
			}
			set
			{
				this._Ref_CampaignAlbums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Ref_CampaignGoal", Storage="_Ref_CampaignGoals", ThisKey="CampaignID", OtherKey="CampaignID")]
		public EntitySet<Ref_CampaignGoal> Ref_CampaignGoals
		{
			get
			{
				return this._Ref_CampaignGoals;
			}
			set
			{
				this._Ref_CampaignGoals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Ref_CampaignLink", Storage="_Ref_CampaignLinks", ThisKey="CampaignID", OtherKey="CampaignID")]
		public EntitySet<Ref_CampaignLink> Ref_CampaignLinks
		{
			get
			{
				return this._Ref_CampaignLinks;
			}
			set
			{
				this._Ref_CampaignLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Ref_CampaignTag", Storage="_Ref_CampaignTags", ThisKey="CampaignID", OtherKey="CampaignID")]
		public EntitySet<Ref_CampaignTag> Ref_CampaignTags
		{
			get
			{
				return this._Ref_CampaignTags;
			}
			set
			{
				this._Ref_CampaignTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Ref_CampaignUser", Storage="_Ref_CampaignUsers", ThisKey="CampaignID", OtherKey="CampaignID")]
		public EntitySet<Ref_CampaignUser> Ref_CampaignUsers
		{
			get
			{
				return this._Ref_CampaignUsers;
			}
			set
			{
				this._Ref_CampaignUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Ref_FeaturedCampaign", Storage="_Ref_FeaturedCampaigns", ThisKey="CampaignID", OtherKey="CampaignID")]
		public EntitySet<Ref_FeaturedCampaign> Ref_FeaturedCampaigns
		{
			get
			{
				return this._Ref_FeaturedCampaigns;
			}
			set
			{
				this._Ref_FeaturedCampaigns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Campaign", Storage="_Account", ThisKey="AccountId", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Campaigns.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Campaigns.Add(this);
						this._AccountId = value.AccountID;
					}
					else
					{
						this._AccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignType_Campaign", Storage="_CampaignType", ThisKey="CampaignTypeId", OtherKey="CampaignTypeID", IsForeignKey=true)]
		public CampaignType CampaignType
		{
			get
			{
				return this._CampaignType.Entity;
			}
			set
			{
				CampaignType previousValue = this._CampaignType.Entity;
				if (((previousValue != value) 
							|| (this._CampaignType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CampaignType.Entity = null;
						previousValue.Campaigns.Remove(this);
					}
					this._CampaignType.Entity = value;
					if ((value != null))
					{
						value.Campaigns.Add(this);
						this._CampaignTypeId = value.CampaignTypeID;
					}
					else
					{
						this._CampaignTypeId = default(int);
					}
					this.SendPropertyChanged("CampaignType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Campaign", Storage="_File", ThisKey="MainFileID", OtherKey="FileID", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Campaigns.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Campaigns.Add(this);
						this._MainFileID = value.FileID;
					}
					else
					{
						this._MainFileID = default(Nullable<int>);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Campaign1", Storage="_File1", ThisKey="GoalFileID", OtherKey="FileID", IsForeignKey=true)]
		public File File1
		{
			get
			{
				return this._File1.Entity;
			}
			set
			{
				File previousValue = this._File1.Entity;
				if (((previousValue != value) 
							|| (this._File1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File1.Entity = null;
						previousValue.Campaigns1.Remove(this);
					}
					this._File1.Entity = value;
					if ((value != null))
					{
						value.Campaigns1.Add(this);
						this._GoalFileID = value.FileID;
					}
					else
					{
						this._GoalFileID = default(Nullable<int>);
					}
					this.SendPropertyChanged("File1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Campaign2", Storage="_File2", ThisKey="SupportersFileID", OtherKey="FileID", IsForeignKey=true)]
		public File File2
		{
			get
			{
				return this._File2.Entity;
			}
			set
			{
				File previousValue = this._File2.Entity;
				if (((previousValue != value) 
							|| (this._File2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File2.Entity = null;
						previousValue.Campaigns2.Remove(this);
					}
					this._File2.Entity = value;
					if ((value != null))
					{
						value.Campaigns2.Add(this);
						this._SupportersFileID = value.FileID;
					}
					else
					{
						this._SupportersFileID = default(Nullable<int>);
					}
					this.SendPropertyChanged("File2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_Campaign", Storage="_Genre", ThisKey="GenreID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Genre Genre
		{
			get
			{
				return this._Genre.Entity;
			}
			set
			{
				Genre previousValue = this._Genre.Entity;
				if (((previousValue != value) 
							|| (this._Genre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Genre.Entity = null;
						previousValue.Campaigns.Remove(this);
					}
					this._Genre.Entity = value;
					if ((value != null))
					{
						value.Campaigns.Add(this);
						this._GenreID = value.ID;
					}
					else
					{
						this._GenreID = default(int);
					}
					this.SendPropertyChanged("Genre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Campaign", Storage="_UserProfile", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Campaigns.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Campaigns.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CampaignComments(CampaignComment entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_CampaignComments(CampaignComment entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_CampaignReviews(CampaignReview entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_CampaignReviews(CampaignReview entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_CampaignUpdates(CampaignUpdate entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_CampaignUpdates(CampaignUpdate entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_Ref_CampaignAlbums(Ref_CampaignAlbum entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_Ref_CampaignAlbums(Ref_CampaignAlbum entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_Ref_CampaignGoals(Ref_CampaignGoal entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_Ref_CampaignGoals(Ref_CampaignGoal entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_Ref_CampaignLinks(Ref_CampaignLink entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_Ref_CampaignLinks(Ref_CampaignLink entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_Ref_CampaignTags(Ref_CampaignTag entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_Ref_CampaignTags(Ref_CampaignTag entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_Ref_CampaignUsers(Ref_CampaignUser entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_Ref_CampaignUsers(Ref_CampaignUser entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_Ref_FeaturedCampaigns(Ref_FeaturedCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_Ref_FeaturedCampaigns(Ref_FeaturedCampaign entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignTypes")]
	public partial class CampaignType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Campaign> _Campaigns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignTypeIDChanging(int value);
    partial void OnCampaignTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CampaignType()
		{
			this._Campaigns = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campaigns), new Action<Campaign>(this.detach_Campaigns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CampaignTypeID
		{
			get
			{
				return this._CampaignTypeID;
			}
			set
			{
				if ((this._CampaignTypeID != value))
				{
					this.OnCampaignTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignTypeID = value;
					this.SendPropertyChanged("CampaignTypeID");
					this.OnCampaignTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignType_Campaign", Storage="_Campaigns", ThisKey="CampaignTypeID", OtherKey="CampaignTypeId")]
		public EntitySet<Campaign> Campaigns
		{
			get
			{
				return this._Campaigns;
			}
			set
			{
				this._Campaigns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.CampaignType = this;
		}
		
		private void detach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.CampaignType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignUpdates")]
	public partial class CampaignUpdate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignUpdateID;
		
		private int _CampaignID;
		
		private int _UserId;
		
		private string _Title;
		
		private string _Content;
		
		private System.DateTime _DateCreated;
		
		private bool _Approved;
		
		private System.Nullable<int> _InReplyTo;
		
		private bool _DonateLocked;
		
		private bool _LikeLocked;
		
		private EntityRef<Campaign> _Campaign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignUpdateIDChanging(int value);
    partial void OnCampaignUpdateIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnApprovedChanging(bool value);
    partial void OnApprovedChanged();
    partial void OnInReplyToChanging(System.Nullable<int> value);
    partial void OnInReplyToChanged();
    partial void OnDonateLockedChanging(bool value);
    partial void OnDonateLockedChanged();
    partial void OnLikeLockedChanging(bool value);
    partial void OnLikeLockedChanged();
    #endregion
		
		public CampaignUpdate()
		{
			this._Campaign = default(EntityRef<Campaign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignUpdateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CampaignUpdateID
		{
			get
			{
				return this._CampaignUpdateID;
			}
			set
			{
				if ((this._CampaignUpdateID != value))
				{
					this.OnCampaignUpdateIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignUpdateID = value;
					this.SendPropertyChanged("CampaignUpdateID");
					this.OnCampaignUpdateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit NOT NULL")]
		public bool Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InReplyTo", DbType="Int")]
		public System.Nullable<int> InReplyTo
		{
			get
			{
				return this._InReplyTo;
			}
			set
			{
				if ((this._InReplyTo != value))
				{
					this.OnInReplyToChanging(value);
					this.SendPropertyChanging();
					this._InReplyTo = value;
					this.SendPropertyChanged("InReplyTo");
					this.OnInReplyToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonateLocked", DbType="Bit NOT NULL")]
		public bool DonateLocked
		{
			get
			{
				return this._DonateLocked;
			}
			set
			{
				if ((this._DonateLocked != value))
				{
					this.OnDonateLockedChanging(value);
					this.SendPropertyChanging();
					this._DonateLocked = value;
					this.SendPropertyChanged("DonateLocked");
					this.OnDonateLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LikeLocked", DbType="Bit NOT NULL")]
		public bool LikeLocked
		{
			get
			{
				return this._LikeLocked;
			}
			set
			{
				if ((this._LikeLocked != value))
				{
					this.OnLikeLockedChanging(value);
					this.SendPropertyChanging();
					this._LikeLocked = value;
					this.SendPropertyChanged("LikeLocked");
					this.OnLikeLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignUpdate", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.CampaignUpdates.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.CampaignUpdates.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comments")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommentID;
		
		private int _UserId;
		
		private string _Title;
		
		private string _Content;
		
		private System.DateTime _DateCreated;
		
		private bool _Approved;
		
		private System.Nullable<int> _InReplyTo;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentIDChanging(int value);
    partial void OnCommentIDChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnApprovedChanging(bool value);
    partial void OnApprovedChanged();
    partial void OnInReplyToChanging(System.Nullable<int> value);
    partial void OnInReplyToChanged();
    #endregion
		
		public Comment()
		{
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit NOT NULL")]
		public bool Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InReplyTo", DbType="Int")]
		public System.Nullable<int> InReplyTo
		{
			get
			{
				return this._InReplyTo;
			}
			set
			{
				if ((this._InReplyTo != value))
				{
					this.OnInReplyToChanging(value);
					this.SendPropertyChanging();
					this._InReplyTo = value;
					this.SendPropertyChanged("InReplyTo");
					this.OnInReplyToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Comment", Storage="_UserProfile", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Files")]
	public partial class File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileID;
		
		private int _UserId;
		
		private string _Name;
		
		private int _FileTypeId;
		
		private string _Url;
		
		private string _Description;
		
		private string _ThumbnailUrl;
		
		private System.DateTime _DateCreated;
		
		private bool _IsAlbumCover;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<double> _Rating;
		
		private System.Nullable<int> _LinkSourceId;
		
		private EntitySet<Campaign> _Campaigns;
		
		private EntitySet<Campaign> _Campaigns1;
		
		private EntitySet<Campaign> _Campaigns2;
		
		private EntitySet<Ref_AlbumFile> _Ref_AlbumFiles;
		
		private EntitySet<Ref_CampaignLink> _Ref_CampaignLinks;
		
		private EntitySet<Ref_FileTag> _Ref_FileTags;
		
		private EntitySet<Ref_UserLink> _Ref_UserLinks;
		
		private EntityRef<FileType> _FileType;
		
		private EntityRef<LinkSource> _LinkSource;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(int value);
    partial void OnFileIDChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFileTypeIdChanging(int value);
    partial void OnFileTypeIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnThumbnailUrlChanging(string value);
    partial void OnThumbnailUrlChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnIsAlbumCoverChanging(bool value);
    partial void OnIsAlbumCoverChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnRatingChanging(System.Nullable<double> value);
    partial void OnRatingChanged();
    partial void OnLinkSourceIdChanging(System.Nullable<int> value);
    partial void OnLinkSourceIdChanged();
    #endregion
		
		public File()
		{
			this._Campaigns = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campaigns), new Action<Campaign>(this.detach_Campaigns));
			this._Campaigns1 = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campaigns1), new Action<Campaign>(this.detach_Campaigns1));
			this._Campaigns2 = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campaigns2), new Action<Campaign>(this.detach_Campaigns2));
			this._Ref_AlbumFiles = new EntitySet<Ref_AlbumFile>(new Action<Ref_AlbumFile>(this.attach_Ref_AlbumFiles), new Action<Ref_AlbumFile>(this.detach_Ref_AlbumFiles));
			this._Ref_CampaignLinks = new EntitySet<Ref_CampaignLink>(new Action<Ref_CampaignLink>(this.attach_Ref_CampaignLinks), new Action<Ref_CampaignLink>(this.detach_Ref_CampaignLinks));
			this._Ref_FileTags = new EntitySet<Ref_FileTag>(new Action<Ref_FileTag>(this.attach_Ref_FileTags), new Action<Ref_FileTag>(this.detach_Ref_FileTags));
			this._Ref_UserLinks = new EntitySet<Ref_UserLink>(new Action<Ref_UserLink>(this.attach_Ref_UserLinks), new Action<Ref_UserLink>(this.detach_Ref_UserLinks));
			this._FileType = default(EntityRef<FileType>);
			this._LinkSource = default(EntityRef<LinkSource>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileTypeId", DbType="Int NOT NULL")]
		public int FileTypeId
		{
			get
			{
				return this._FileTypeId;
			}
			set
			{
				if ((this._FileTypeId != value))
				{
					if (this._FileType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FileTypeId = value;
					this.SendPropertyChanged("FileTypeId");
					this.OnFileTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbnailUrl", DbType="NVarChar(255)")]
		public string ThumbnailUrl
		{
			get
			{
				return this._ThumbnailUrl;
			}
			set
			{
				if ((this._ThumbnailUrl != value))
				{
					this.OnThumbnailUrlChanging(value);
					this.SendPropertyChanging();
					this._ThumbnailUrl = value;
					this.SendPropertyChanged("ThumbnailUrl");
					this.OnThumbnailUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAlbumCover", DbType="Bit NOT NULL")]
		public bool IsAlbumCover
		{
			get
			{
				return this._IsAlbumCover;
			}
			set
			{
				if ((this._IsAlbumCover != value))
				{
					this.OnIsAlbumCoverChanging(value);
					this.SendPropertyChanging();
					this._IsAlbumCover = value;
					this.SendPropertyChanged("IsAlbumCover");
					this.OnIsAlbumCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Float")]
		public System.Nullable<double> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkSourceId", DbType="Int")]
		public System.Nullable<int> LinkSourceId
		{
			get
			{
				return this._LinkSourceId;
			}
			set
			{
				if ((this._LinkSourceId != value))
				{
					if (this._LinkSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinkSourceIdChanging(value);
					this.SendPropertyChanging();
					this._LinkSourceId = value;
					this.SendPropertyChanged("LinkSourceId");
					this.OnLinkSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Campaign", Storage="_Campaigns", ThisKey="FileID", OtherKey="MainFileID")]
		public EntitySet<Campaign> Campaigns
		{
			get
			{
				return this._Campaigns;
			}
			set
			{
				this._Campaigns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Campaign1", Storage="_Campaigns1", ThisKey="FileID", OtherKey="GoalFileID")]
		public EntitySet<Campaign> Campaigns1
		{
			get
			{
				return this._Campaigns1;
			}
			set
			{
				this._Campaigns1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Campaign2", Storage="_Campaigns2", ThisKey="FileID", OtherKey="SupportersFileID")]
		public EntitySet<Campaign> Campaigns2
		{
			get
			{
				return this._Campaigns2;
			}
			set
			{
				this._Campaigns2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Ref_AlbumFile", Storage="_Ref_AlbumFiles", ThisKey="FileID", OtherKey="FileID")]
		public EntitySet<Ref_AlbumFile> Ref_AlbumFiles
		{
			get
			{
				return this._Ref_AlbumFiles;
			}
			set
			{
				this._Ref_AlbumFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Ref_CampaignLink", Storage="_Ref_CampaignLinks", ThisKey="FileID", OtherKey="LinkID")]
		public EntitySet<Ref_CampaignLink> Ref_CampaignLinks
		{
			get
			{
				return this._Ref_CampaignLinks;
			}
			set
			{
				this._Ref_CampaignLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Ref_FileTag", Storage="_Ref_FileTags", ThisKey="FileID", OtherKey="FileID")]
		public EntitySet<Ref_FileTag> Ref_FileTags
		{
			get
			{
				return this._Ref_FileTags;
			}
			set
			{
				this._Ref_FileTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Ref_UserLink", Storage="_Ref_UserLinks", ThisKey="FileID", OtherKey="LinkID")]
		public EntitySet<Ref_UserLink> Ref_UserLinks
		{
			get
			{
				return this._Ref_UserLinks;
			}
			set
			{
				this._Ref_UserLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileType_File", Storage="_FileType", ThisKey="FileTypeId", OtherKey="FileTypeID", IsForeignKey=true)]
		public FileType FileType
		{
			get
			{
				return this._FileType.Entity;
			}
			set
			{
				FileType previousValue = this._FileType.Entity;
				if (((previousValue != value) 
							|| (this._FileType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FileType.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._FileType.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._FileTypeId = value.FileTypeID;
					}
					else
					{
						this._FileTypeId = default(int);
					}
					this.SendPropertyChanged("FileType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LinkSource_File", Storage="_LinkSource", ThisKey="LinkSourceId", OtherKey="LinkTypeID", IsForeignKey=true, DeleteRule="CASCADE")]
		public LinkSource LinkSource
		{
			get
			{
				return this._LinkSource.Entity;
			}
			set
			{
				LinkSource previousValue = this._LinkSource.Entity;
				if (((previousValue != value) 
							|| (this._LinkSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LinkSource.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._LinkSource.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._LinkSourceId = value.LinkTypeID;
					}
					else
					{
						this._LinkSourceId = default(Nullable<int>);
					}
					this.SendPropertyChanged("LinkSource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_File", Storage="_UserProfile", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
		
		private void attach_Campaigns1(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.File1 = this;
		}
		
		private void detach_Campaigns1(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.File1 = null;
		}
		
		private void attach_Campaigns2(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.File2 = this;
		}
		
		private void detach_Campaigns2(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.File2 = null;
		}
		
		private void attach_Ref_AlbumFiles(Ref_AlbumFile entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_Ref_AlbumFiles(Ref_AlbumFile entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
		
		private void attach_Ref_CampaignLinks(Ref_CampaignLink entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_Ref_CampaignLinks(Ref_CampaignLink entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
		
		private void attach_Ref_FileTags(Ref_FileTag entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_Ref_FileTags(Ref_FileTag entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
		
		private void attach_Ref_UserLinks(Ref_UserLink entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_Ref_UserLinks(Ref_UserLink entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileTypes")]
	public partial class FileType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<File> _Files;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileTypeIDChanging(int value);
    partial void OnFileTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public FileType()
		{
			this._Files = new EntitySet<File>(new Action<File>(this.attach_Files), new Action<File>(this.detach_Files));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FileTypeID
		{
			get
			{
				return this._FileTypeID;
			}
			set
			{
				if ((this._FileTypeID != value))
				{
					this.OnFileTypeIDChanging(value);
					this.SendPropertyChanging();
					this._FileTypeID = value;
					this.SendPropertyChanged("FileTypeID");
					this.OnFileTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FileType_File", Storage="_Files", ThisKey="FileTypeID", OtherKey="FileTypeId")]
		public EntitySet<File> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.FileType = this;
		}
		
		private void detach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.FileType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Genres")]
	public partial class Genre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Campaign> _Campaigns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Genre()
		{
			this._Campaigns = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campaigns), new Action<Campaign>(this.detach_Campaigns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_Campaign", Storage="_Campaigns", ThisKey="ID", OtherKey="GenreID")]
		public EntitySet<Campaign> Campaigns
		{
			get
			{
				return this._Campaigns;
			}
			set
			{
				this._Campaigns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.Genre = this;
		}
		
		private void detach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.Genre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Goals")]
	public partial class Goal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GoalID;
		
		private string _Name;
		
		private int _GoalTypeID;
		
		private string _Description;
		
		private int _UserID;
		
		private int _TargetNum;
		
		private int _QtyMin;
		
		private int _QtyMax;
		
		private System.DateTime _TargetDate;
		
		private System.DateTime _ExpDate;
		
		private System.DateTime _DateCreated;
		
		private bool _Approved;
		
		private bool _Private;
		
		private string _Status;
		
		private string _YouTubeURL;
		
		private string _FBURL;
		
		private string _TwitterURL;
		
		private int _CurrentQTY;
		
		private EntitySet<Ref_CampaignGoal> _Ref_CampaignGoals;
		
		private EntitySet<Ref_GoalReward> _Ref_GoalRewards;
		
		private EntityRef<GoalType> _GoalType;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGoalIDChanging(int value);
    partial void OnGoalIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGoalTypeIDChanging(int value);
    partial void OnGoalTypeIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnTargetNumChanging(int value);
    partial void OnTargetNumChanged();
    partial void OnQtyMinChanging(int value);
    partial void OnQtyMinChanged();
    partial void OnQtyMaxChanging(int value);
    partial void OnQtyMaxChanged();
    partial void OnTargetDateChanging(System.DateTime value);
    partial void OnTargetDateChanged();
    partial void OnExpDateChanging(System.DateTime value);
    partial void OnExpDateChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnApprovedChanging(bool value);
    partial void OnApprovedChanged();
    partial void OnPrivateChanging(bool value);
    partial void OnPrivateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnYouTubeURLChanging(string value);
    partial void OnYouTubeURLChanged();
    partial void OnFBURLChanging(string value);
    partial void OnFBURLChanged();
    partial void OnTwitterURLChanging(string value);
    partial void OnTwitterURLChanged();
    partial void OnCurrentQTYChanging(int value);
    partial void OnCurrentQTYChanged();
    #endregion
		
		public Goal()
		{
			this._Ref_CampaignGoals = new EntitySet<Ref_CampaignGoal>(new Action<Ref_CampaignGoal>(this.attach_Ref_CampaignGoals), new Action<Ref_CampaignGoal>(this.detach_Ref_CampaignGoals));
			this._Ref_GoalRewards = new EntitySet<Ref_GoalReward>(new Action<Ref_GoalReward>(this.attach_Ref_GoalRewards), new Action<Ref_GoalReward>(this.detach_Ref_GoalRewards));
			this._GoalType = default(EntityRef<GoalType>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GoalID
		{
			get
			{
				return this._GoalID;
			}
			set
			{
				if ((this._GoalID != value))
				{
					this.OnGoalIDChanging(value);
					this.SendPropertyChanging();
					this._GoalID = value;
					this.SendPropertyChanged("GoalID");
					this.OnGoalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalTypeID", DbType="Int NOT NULL")]
		public int GoalTypeID
		{
			get
			{
				return this._GoalTypeID;
			}
			set
			{
				if ((this._GoalTypeID != value))
				{
					if (this._GoalType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoalTypeIDChanging(value);
					this.SendPropertyChanging();
					this._GoalTypeID = value;
					this.SendPropertyChanged("GoalTypeID");
					this.OnGoalTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetNum", DbType="Int NOT NULL")]
		public int TargetNum
		{
			get
			{
				return this._TargetNum;
			}
			set
			{
				if ((this._TargetNum != value))
				{
					this.OnTargetNumChanging(value);
					this.SendPropertyChanging();
					this._TargetNum = value;
					this.SendPropertyChanged("TargetNum");
					this.OnTargetNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyMin", DbType="Int NOT NULL")]
		public int QtyMin
		{
			get
			{
				return this._QtyMin;
			}
			set
			{
				if ((this._QtyMin != value))
				{
					this.OnQtyMinChanging(value);
					this.SendPropertyChanging();
					this._QtyMin = value;
					this.SendPropertyChanged("QtyMin");
					this.OnQtyMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QtyMax", DbType="Int NOT NULL")]
		public int QtyMax
		{
			get
			{
				return this._QtyMax;
			}
			set
			{
				if ((this._QtyMax != value))
				{
					this.OnQtyMaxChanging(value);
					this.SendPropertyChanging();
					this._QtyMax = value;
					this.SendPropertyChanged("QtyMax");
					this.OnQtyMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDate", DbType="DateTime NOT NULL")]
		public System.DateTime TargetDate
		{
			get
			{
				return this._TargetDate;
			}
			set
			{
				if ((this._TargetDate != value))
				{
					this.OnTargetDateChanging(value);
					this.SendPropertyChanging();
					this._TargetDate = value;
					this.SendPropertyChanged("TargetDate");
					this.OnTargetDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpDate
		{
			get
			{
				return this._ExpDate;
			}
			set
			{
				if ((this._ExpDate != value))
				{
					this.OnExpDateChanging(value);
					this.SendPropertyChanging();
					this._ExpDate = value;
					this.SendPropertyChanged("ExpDate");
					this.OnExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit NOT NULL")]
		public bool Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Private", DbType="Bit NOT NULL")]
		public bool Private
		{
			get
			{
				return this._Private;
			}
			set
			{
				if ((this._Private != value))
				{
					this.OnPrivateChanging(value);
					this.SendPropertyChanging();
					this._Private = value;
					this.SendPropertyChanged("Private");
					this.OnPrivateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YouTubeURL", DbType="NVarChar(255)")]
		public string YouTubeURL
		{
			get
			{
				return this._YouTubeURL;
			}
			set
			{
				if ((this._YouTubeURL != value))
				{
					this.OnYouTubeURLChanging(value);
					this.SendPropertyChanging();
					this._YouTubeURL = value;
					this.SendPropertyChanged("YouTubeURL");
					this.OnYouTubeURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FBURL", DbType="NVarChar(255)")]
		public string FBURL
		{
			get
			{
				return this._FBURL;
			}
			set
			{
				if ((this._FBURL != value))
				{
					this.OnFBURLChanging(value);
					this.SendPropertyChanging();
					this._FBURL = value;
					this.SendPropertyChanged("FBURL");
					this.OnFBURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwitterURL", DbType="NVarChar(255)")]
		public string TwitterURL
		{
			get
			{
				return this._TwitterURL;
			}
			set
			{
				if ((this._TwitterURL != value))
				{
					this.OnTwitterURLChanging(value);
					this.SendPropertyChanging();
					this._TwitterURL = value;
					this.SendPropertyChanged("TwitterURL");
					this.OnTwitterURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentQTY", DbType="Int NOT NULL")]
		public int CurrentQTY
		{
			get
			{
				return this._CurrentQTY;
			}
			set
			{
				if ((this._CurrentQTY != value))
				{
					this.OnCurrentQTYChanging(value);
					this.SendPropertyChanging();
					this._CurrentQTY = value;
					this.SendPropertyChanged("CurrentQTY");
					this.OnCurrentQTYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goal_Ref_CampaignGoal", Storage="_Ref_CampaignGoals", ThisKey="GoalID", OtherKey="GoalID")]
		public EntitySet<Ref_CampaignGoal> Ref_CampaignGoals
		{
			get
			{
				return this._Ref_CampaignGoals;
			}
			set
			{
				this._Ref_CampaignGoals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goal_Ref_GoalReward", Storage="_Ref_GoalRewards", ThisKey="GoalID", OtherKey="GoalID")]
		public EntitySet<Ref_GoalReward> Ref_GoalRewards
		{
			get
			{
				return this._Ref_GoalRewards;
			}
			set
			{
				this._Ref_GoalRewards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoalType_Goal", Storage="_GoalType", ThisKey="GoalTypeID", OtherKey="GoalTypeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GoalType GoalType
		{
			get
			{
				return this._GoalType.Entity;
			}
			set
			{
				GoalType previousValue = this._GoalType.Entity;
				if (((previousValue != value) 
							|| (this._GoalType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GoalType.Entity = null;
						previousValue.Goals.Remove(this);
					}
					this._GoalType.Entity = value;
					if ((value != null))
					{
						value.Goals.Add(this);
						this._GoalTypeID = value.GoalTypeID;
					}
					else
					{
						this._GoalTypeID = default(int);
					}
					this.SendPropertyChanged("GoalType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Goal", Storage="_UserProfile", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Goals.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Goals.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ref_CampaignGoals(Ref_CampaignGoal entity)
		{
			this.SendPropertyChanging();
			entity.Goal = this;
		}
		
		private void detach_Ref_CampaignGoals(Ref_CampaignGoal entity)
		{
			this.SendPropertyChanging();
			entity.Goal = null;
		}
		
		private void attach_Ref_GoalRewards(Ref_GoalReward entity)
		{
			this.SendPropertyChanging();
			entity.Goal = this;
		}
		
		private void detach_Ref_GoalRewards(Ref_GoalReward entity)
		{
			this.SendPropertyChanging();
			entity.Goal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GoalTypes")]
	public partial class GoalType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GoalTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Goal> _Goals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGoalTypeIDChanging(int value);
    partial void OnGoalTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public GoalType()
		{
			this._Goals = new EntitySet<Goal>(new Action<Goal>(this.attach_Goals), new Action<Goal>(this.detach_Goals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GoalTypeID
		{
			get
			{
				return this._GoalTypeID;
			}
			set
			{
				if ((this._GoalTypeID != value))
				{
					this.OnGoalTypeIDChanging(value);
					this.SendPropertyChanging();
					this._GoalTypeID = value;
					this.SendPropertyChanged("GoalTypeID");
					this.OnGoalTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GoalType_Goal", Storage="_Goals", ThisKey="GoalTypeID", OtherKey="GoalTypeID")]
		public EntitySet<Goal> Goals
		{
			get
			{
				return this._Goals;
			}
			set
			{
				this._Goals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Goals(Goal entity)
		{
			this.SendPropertyChanging();
			entity.GoalType = this;
		}
		
		private void detach_Goals(Goal entity)
		{
			this.SendPropertyChanging();
			entity.GoalType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkSources")]
	public partial class LinkSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LinkTypeID;
		
		private string _WebsiteName;
		
		private string _Description;
		
		private string _HomeURL;
		
		private EntitySet<File> _Files;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLinkTypeIDChanging(int value);
    partial void OnLinkTypeIDChanged();
    partial void OnWebsiteNameChanging(string value);
    partial void OnWebsiteNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnHomeURLChanging(string value);
    partial void OnHomeURLChanged();
    #endregion
		
		public LinkSource()
		{
			this._Files = new EntitySet<File>(new Action<File>(this.attach_Files), new Action<File>(this.detach_Files));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LinkTypeID
		{
			get
			{
				return this._LinkTypeID;
			}
			set
			{
				if ((this._LinkTypeID != value))
				{
					this.OnLinkTypeIDChanging(value);
					this.SendPropertyChanging();
					this._LinkTypeID = value;
					this.SendPropertyChanged("LinkTypeID");
					this.OnLinkTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WebsiteName
		{
			get
			{
				return this._WebsiteName;
			}
			set
			{
				if ((this._WebsiteName != value))
				{
					this.OnWebsiteNameChanging(value);
					this.SendPropertyChanging();
					this._WebsiteName = value;
					this.SendPropertyChanged("WebsiteName");
					this.OnWebsiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeURL", DbType="NVarChar(50)")]
		public string HomeURL
		{
			get
			{
				return this._HomeURL;
			}
			set
			{
				if ((this._HomeURL != value))
				{
					this.OnHomeURLChanging(value);
					this.SendPropertyChanging();
					this._HomeURL = value;
					this.SendPropertyChanged("HomeURL");
					this.OnHomeURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LinkSource_File", Storage="_Files", ThisKey="LinkTypeID", OtherKey="LinkSourceId")]
		public EntitySet<File> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.LinkSource = this;
		}
		
		private void detach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.LinkSource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Messages")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private int _UserId;
		
		private System.DateTime _DateCreated;
		
		private string _Subject;
		
		private string _Body;
		
		private System.Nullable<int> _InReplyToMesssageId;
		
		private string _ToList;
		
		private System.Nullable<bool> _Read;
		
		private System.Nullable<System.DateTime> _DateRead;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnInReplyToMesssageIdChanging(System.Nullable<int> value);
    partial void OnInReplyToMesssageIdChanged();
    partial void OnToListChanging(string value);
    partial void OnToListChanged();
    partial void OnReadChanging(System.Nullable<bool> value);
    partial void OnReadChanged();
    partial void OnDateReadChanging(System.Nullable<System.DateTime> value);
    partial void OnDateReadChanged();
    #endregion
		
		public Message()
		{
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InReplyToMesssageId", DbType="Int")]
		public System.Nullable<int> InReplyToMesssageId
		{
			get
			{
				return this._InReplyToMesssageId;
			}
			set
			{
				if ((this._InReplyToMesssageId != value))
				{
					this.OnInReplyToMesssageIdChanging(value);
					this.SendPropertyChanging();
					this._InReplyToMesssageId = value;
					this.SendPropertyChanged("InReplyToMesssageId");
					this.OnInReplyToMesssageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToList", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ToList
		{
			get
			{
				return this._ToList;
			}
			set
			{
				if ((this._ToList != value))
				{
					this.OnToListChanging(value);
					this.SendPropertyChanging();
					this._ToList = value;
					this.SendPropertyChanged("ToList");
					this.OnToListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Read]", Storage="_Read", DbType="Bit")]
		public System.Nullable<bool> Read
		{
			get
			{
				return this._Read;
			}
			set
			{
				if ((this._Read != value))
				{
					this.OnReadChanging(value);
					this.SendPropertyChanging();
					this._Read = value;
					this.SendPropertyChanged("Read");
					this.OnReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRead", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRead
		{
			get
			{
				return this._DateRead;
			}
			set
			{
				if ((this._DateRead != value))
				{
					this.OnDateReadChanging(value);
					this.SendPropertyChanging();
					this._DateRead = value;
					this.SendPropertyChanged("DateRead");
					this.OnDateReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Message", Storage="_UserProfile", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrivacyLevels")]
	public partial class PrivacyLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PrivacyLevelID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Album> _Albums;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPrivacyLevelIDChanging(int value);
    partial void OnPrivacyLevelIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public PrivacyLevel()
		{
			this._Albums = new EntitySet<Album>(new Action<Album>(this.attach_Albums), new Action<Album>(this.detach_Albums));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivacyLevelID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PrivacyLevelID
		{
			get
			{
				return this._PrivacyLevelID;
			}
			set
			{
				if ((this._PrivacyLevelID != value))
				{
					this.OnPrivacyLevelIDChanging(value);
					this.SendPropertyChanging();
					this._PrivacyLevelID = value;
					this.SendPropertyChanged("PrivacyLevelID");
					this.OnPrivacyLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrivacyLevel_Album", Storage="_Albums", ThisKey="PrivacyLevelID", OtherKey="PrivacyLevelId")]
		public EntitySet<Album> Albums
		{
			get
			{
				return this._Albums;
			}
			set
			{
				this._Albums.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Albums(Album entity)
		{
			this.SendPropertyChanging();
			entity.PrivacyLevel = this;
		}
		
		private void detach_Albums(Album entity)
		{
			this.SendPropertyChanging();
			entity.PrivacyLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private int _UserID;
		
		private int _ProductTypeID;
		
		private decimal _Price;
		
		private int _ItemID;
		
		private System.Nullable<int> _QTY;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<bool> _Approved;
		
		private EntitySet<Purchase> _Purchases;
		
		private EntityRef<ProductType> _ProductType;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnProductTypeIDChanging(int value);
    partial void OnProductTypeIDChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnQTYChanging(System.Nullable<int> value);
    partial void OnQTYChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnApprovedChanging(System.Nullable<bool> value);
    partial void OnApprovedChanged();
    #endregion
		
		public Product()
		{
			this._Purchases = new EntitySet<Purchase>(new Action<Purchase>(this.attach_Purchases), new Action<Purchase>(this.detach_Purchases));
			this._ProductType = default(EntityRef<ProductType>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeID", DbType="Int NOT NULL")]
		public int ProductTypeID
		{
			get
			{
				return this._ProductTypeID;
			}
			set
			{
				if ((this._ProductTypeID != value))
				{
					if (this._ProductType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeID = value;
					this.SendPropertyChanged("ProductTypeID");
					this.OnProductTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTY", DbType="Int")]
		public System.Nullable<int> QTY
		{
			get
			{
				return this._QTY;
			}
			set
			{
				if ((this._QTY != value))
				{
					this.OnQTYChanging(value);
					this.SendPropertyChanging();
					this._QTY = value;
					this.SendPropertyChanged("QTY");
					this.OnQTYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit")]
		public System.Nullable<bool> Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Purchase", Storage="_Purchases", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<Purchase> Purchases
		{
			get
			{
				return this._Purchases;
			}
			set
			{
				this._Purchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_Product", Storage="_ProductType", ThisKey="ProductTypeID", OtherKey="ProductTypeID", IsForeignKey=true)]
		public ProductType ProductType
		{
			get
			{
				return this._ProductType.Entity;
			}
			set
			{
				ProductType previousValue = this._ProductType.Entity;
				if (((previousValue != value) 
							|| (this._ProductType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductType.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._ProductType.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ProductTypeID = value.ProductTypeID;
					}
					else
					{
						this._ProductTypeID = default(int);
					}
					this.SendPropertyChanged("ProductType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Product", Storage="_UserProfile", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductTypes")]
	public partial class ProductType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _InTokens;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductTypeIDChanging(int value);
    partial void OnProductTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnInTokensChanging(bool value);
    partial void OnInTokensChanged();
    #endregion
		
		public ProductType()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductTypeID
		{
			get
			{
				return this._ProductTypeID;
			}
			set
			{
				if ((this._ProductTypeID != value))
				{
					this.OnProductTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeID = value;
					this.SendPropertyChanged("ProductTypeID");
					this.OnProductTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InTokens", DbType="Bit NOT NULL")]
		public bool InTokens
		{
			get
			{
				return this._InTokens;
			}
			set
			{
				if ((this._InTokens != value))
				{
					this.OnInTokensChanging(value);
					this.SendPropertyChanging();
					this._InTokens = value;
					this.SendPropertyChanged("InTokens");
					this.OnInTokensChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductType_Product", Storage="_Products", ThisKey="ProductTypeID", OtherKey="ProductTypeID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purchases")]
	public partial class Purchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseID;
		
		private int _UserID;
		
		private int _ProductID;
		
		private int _Date;
		
		private System.Nullable<int> _Qty;
		
		private EntitySet<Transaction> _Transactions;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseIDChanging(int value);
    partial void OnPurchaseIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnDateChanging(int value);
    partial void OnDateChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    #endregion
		
		public Purchase()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			this._Product = default(EntityRef<Product>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseID
		{
			get
			{
				return this._PurchaseID;
			}
			set
			{
				if ((this._PurchaseID != value))
				{
					this.OnPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseID = value;
					this.SendPropertyChanged("PurchaseID");
					this.OnPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Int NOT NULL")]
		public int Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_Transaction", Storage="_Transactions", ThisKey="PurchaseID", OtherKey="PurchaseID")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Purchase", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Purchases.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Purchases.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Purchase", Storage="_UserProfile", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Purchases.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Purchases.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Purchase = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.Purchase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref_AlbumFiles")]
	public partial class Ref_AlbumFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AlbumID;
		
		private int _FileID;
		
		private EntityRef<File> _File;
		
		private EntityRef<Album> _Album;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlbumIDChanging(int value);
    partial void OnAlbumIDChanged();
    partial void OnFileIDChanging(int value);
    partial void OnFileIDChanged();
    #endregion
		
		public Ref_AlbumFile()
		{
			this._File = default(EntityRef<File>);
			this._Album = default(EntityRef<Album>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					if (this._Album.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Ref_AlbumFile", Storage="_File", ThisKey="FileID", OtherKey="FileID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Ref_AlbumFiles.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Ref_AlbumFiles.Add(this);
						this._FileID = value.FileID;
					}
					else
					{
						this._FileID = default(int);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_Ref_AlbumFile", Storage="_Album", ThisKey="AlbumID", OtherKey="AlbumId", IsForeignKey=true)]
		public Album Album
		{
			get
			{
				return this._Album.Entity;
			}
			set
			{
				Album previousValue = this._Album.Entity;
				if (((previousValue != value) 
							|| (this._Album.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Album.Entity = null;
						previousValue.Ref_AlbumFiles.Remove(this);
					}
					this._Album.Entity = value;
					if ((value != null))
					{
						value.Ref_AlbumFiles.Add(this);
						this._AlbumID = value.AlbumId;
					}
					else
					{
						this._AlbumID = default(int);
					}
					this.SendPropertyChanged("Album");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref_AlbumTags")]
	public partial class Ref_AlbumTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AlbumID;
		
		private int _TagID;
		
		private EntityRef<Album> _Album;
		
		private EntityRef<Tag> _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlbumIDChanging(int value);
    partial void OnAlbumIDChanged();
    partial void OnTagIDChanging(int value);
    partial void OnTagIDChanged();
    #endregion
		
		public Ref_AlbumTag()
		{
			this._Album = default(EntityRef<Album>);
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					if (this._Album.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_Ref_AlbumTag", Storage="_Album", ThisKey="AlbumID", OtherKey="AlbumId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Album Album
		{
			get
			{
				return this._Album.Entity;
			}
			set
			{
				Album previousValue = this._Album.Entity;
				if (((previousValue != value) 
							|| (this._Album.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Album.Entity = null;
						previousValue.Ref_AlbumTags.Remove(this);
					}
					this._Album.Entity = value;
					if ((value != null))
					{
						value.Ref_AlbumTags.Add(this);
						this._AlbumID = value.AlbumId;
					}
					else
					{
						this._AlbumID = default(int);
					}
					this.SendPropertyChanged("Album");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_Ref_AlbumTag", Storage="_Tag", ThisKey="TagID", OtherKey="TagID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.Ref_AlbumTags.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.Ref_AlbumTags.Add(this);
						this._TagID = value.TagID;
					}
					else
					{
						this._TagID = default(int);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref_CampaignAlbums")]
	public partial class Ref_CampaignAlbum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignID;
		
		private int _AlbumID;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<Album> _Album;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnAlbumIDChanging(int value);
    partial void OnAlbumIDChanged();
    #endregion
		
		public Ref_CampaignAlbum()
		{
			this._Campaign = default(EntityRef<Campaign>);
			this._Album = default(EntityRef<Album>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					if (this._Album.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Ref_CampaignAlbum", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.Ref_CampaignAlbums.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.Ref_CampaignAlbums.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_Ref_CampaignAlbum", Storage="_Album", ThisKey="AlbumID", OtherKey="AlbumId", IsForeignKey=true)]
		public Album Album
		{
			get
			{
				return this._Album.Entity;
			}
			set
			{
				Album previousValue = this._Album.Entity;
				if (((previousValue != value) 
							|| (this._Album.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Album.Entity = null;
						previousValue.Ref_CampaignAlbums.Remove(this);
					}
					this._Album.Entity = value;
					if ((value != null))
					{
						value.Ref_CampaignAlbums.Add(this);
						this._AlbumID = value.AlbumId;
					}
					else
					{
						this._AlbumID = default(int);
					}
					this.SendPropertyChanged("Album");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref_CampaignGoals")]
	public partial class Ref_CampaignGoal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignID;
		
		private int _GoalID;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<Goal> _Goal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnGoalIDChanging(int value);
    partial void OnGoalIDChanged();
    #endregion
		
		public Ref_CampaignGoal()
		{
			this._Campaign = default(EntityRef<Campaign>);
			this._Goal = default(EntityRef<Goal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GoalID
		{
			get
			{
				return this._GoalID;
			}
			set
			{
				if ((this._GoalID != value))
				{
					if (this._Goal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoalIDChanging(value);
					this.SendPropertyChanging();
					this._GoalID = value;
					this.SendPropertyChanged("GoalID");
					this.OnGoalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Ref_CampaignGoal", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.Ref_CampaignGoals.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.Ref_CampaignGoals.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goal_Ref_CampaignGoal", Storage="_Goal", ThisKey="GoalID", OtherKey="GoalID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Goal Goal
		{
			get
			{
				return this._Goal.Entity;
			}
			set
			{
				Goal previousValue = this._Goal.Entity;
				if (((previousValue != value) 
							|| (this._Goal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Goal.Entity = null;
						previousValue.Ref_CampaignGoals.Remove(this);
					}
					this._Goal.Entity = value;
					if ((value != null))
					{
						value.Ref_CampaignGoals.Add(this);
						this._GoalID = value.GoalID;
					}
					else
					{
						this._GoalID = default(int);
					}
					this.SendPropertyChanged("Goal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref_CampaignLinks")]
	public partial class Ref_CampaignLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignID;
		
		private int _LinkID;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<File> _File;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnLinkIDChanging(int value);
    partial void OnLinkIDChanged();
    #endregion
		
		public Ref_CampaignLink()
		{
			this._Campaign = default(EntityRef<Campaign>);
			this._File = default(EntityRef<File>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LinkID
		{
			get
			{
				return this._LinkID;
			}
			set
			{
				if ((this._LinkID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinkIDChanging(value);
					this.SendPropertyChanging();
					this._LinkID = value;
					this.SendPropertyChanged("LinkID");
					this.OnLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Ref_CampaignLink", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.Ref_CampaignLinks.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.Ref_CampaignLinks.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Ref_CampaignLink", Storage="_File", ThisKey="LinkID", OtherKey="FileID", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Ref_CampaignLinks.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Ref_CampaignLinks.Add(this);
						this._LinkID = value.FileID;
					}
					else
					{
						this._LinkID = default(int);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref_CampaignTags")]
	public partial class Ref_CampaignTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignID;
		
		private int _TagID;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<Tag> _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnTagIDChanging(int value);
    partial void OnTagIDChanged();
    #endregion
		
		public Ref_CampaignTag()
		{
			this._Campaign = default(EntityRef<Campaign>);
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Ref_CampaignTag", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.Ref_CampaignTags.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.Ref_CampaignTags.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_Ref_CampaignTag", Storage="_Tag", ThisKey="TagID", OtherKey="TagID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.Ref_CampaignTags.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.Ref_CampaignTags.Add(this);
						this._TagID = value.TagID;
					}
					else
					{
						this._TagID = default(int);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref_CampaignUsers")]
	public partial class Ref_CampaignUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignID;
		
		private int _UserID;
		
		private int _RelationshipTypeID;
		
		private System.DateTime _DateAdded;
		
		private System.Nullable<int> _AddedBy;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<Campaign_Users_RelationshipType> _Campaign_Users_RelationshipType;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnRelationshipTypeIDChanging(int value);
    partial void OnRelationshipTypeIDChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnAddedByChanging(System.Nullable<int> value);
    partial void OnAddedByChanged();
    #endregion
		
		public Ref_CampaignUser()
		{
			this._Campaign = default(EntityRef<Campaign>);
			this._Campaign_Users_RelationshipType = default(EntityRef<Campaign_Users_RelationshipType>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationshipTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RelationshipTypeID
		{
			get
			{
				return this._RelationshipTypeID;
			}
			set
			{
				if ((this._RelationshipTypeID != value))
				{
					if (this._Campaign_Users_RelationshipType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelationshipTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RelationshipTypeID = value;
					this.SendPropertyChanged("RelationshipTypeID");
					this.OnRelationshipTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedBy", DbType="Int")]
		public System.Nullable<int> AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this.OnAddedByChanging(value);
					this.SendPropertyChanging();
					this._AddedBy = value;
					this.SendPropertyChanged("AddedBy");
					this.OnAddedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Ref_CampaignUser", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.Ref_CampaignUsers.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.Ref_CampaignUsers.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Users_RelationshipType_Ref_CampaignUser", Storage="_Campaign_Users_RelationshipType", ThisKey="RelationshipTypeID", OtherKey="RelationshipTypeID", IsForeignKey=true)]
		public Campaign_Users_RelationshipType Campaign_Users_RelationshipType
		{
			get
			{
				return this._Campaign_Users_RelationshipType.Entity;
			}
			set
			{
				Campaign_Users_RelationshipType previousValue = this._Campaign_Users_RelationshipType.Entity;
				if (((previousValue != value) 
							|| (this._Campaign_Users_RelationshipType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign_Users_RelationshipType.Entity = null;
						previousValue.Ref_CampaignUsers.Remove(this);
					}
					this._Campaign_Users_RelationshipType.Entity = value;
					if ((value != null))
					{
						value.Ref_CampaignUsers.Add(this);
						this._RelationshipTypeID = value.RelationshipTypeID;
					}
					else
					{
						this._RelationshipTypeID = default(int);
					}
					this.SendPropertyChanged("Campaign_Users_RelationshipType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Ref_CampaignUser", Storage="_UserProfile", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Ref_CampaignUsers.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Ref_CampaignUsers.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref_FeaturedCampaigns")]
	public partial class Ref_FeaturedCampaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeaturedCampaignID;
		
		private int _CampaignID;
		
		private EntityRef<Campaign> _Campaign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeaturedCampaignIDChanging(int value);
    partial void OnFeaturedCampaignIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    #endregion
		
		public Ref_FeaturedCampaign()
		{
			this._Campaign = default(EntityRef<Campaign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeaturedCampaignID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeaturedCampaignID
		{
			get
			{
				return this._FeaturedCampaignID;
			}
			set
			{
				if ((this._FeaturedCampaignID != value))
				{
					this.OnFeaturedCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._FeaturedCampaignID = value;
					this.SendPropertyChanged("FeaturedCampaignID");
					this.OnFeaturedCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_Ref_FeaturedCampaign", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.Ref_FeaturedCampaigns.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.Ref_FeaturedCampaigns.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref_FileTags")]
	public partial class Ref_FileTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileID;
		
		private int _TagID;
		
		private EntityRef<File> _File;
		
		private EntityRef<Tag> _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(int value);
    partial void OnFileIDChanged();
    partial void OnTagIDChanging(int value);
    partial void OnTagIDChanged();
    #endregion
		
		public Ref_FileTag()
		{
			this._File = default(EntityRef<File>);
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Ref_FileTag", Storage="_File", ThisKey="FileID", OtherKey="FileID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Ref_FileTags.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Ref_FileTags.Add(this);
						this._FileID = value.FileID;
					}
					else
					{
						this._FileID = default(int);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_Ref_FileTag", Storage="_Tag", ThisKey="TagID", OtherKey="TagID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.Ref_FileTags.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.Ref_FileTags.Add(this);
						this._TagID = value.TagID;
					}
					else
					{
						this._TagID = default(int);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref_GoalRewards")]
	public partial class Ref_GoalReward : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GoalID;
		
		private int _RewardID;
		
		private EntityRef<Goal> _Goal;
		
		private EntityRef<Reward> _Reward;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGoalIDChanging(int value);
    partial void OnGoalIDChanged();
    partial void OnRewardIDChanging(int value);
    partial void OnRewardIDChanged();
    #endregion
		
		public Ref_GoalReward()
		{
			this._Goal = default(EntityRef<Goal>);
			this._Reward = default(EntityRef<Reward>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GoalID
		{
			get
			{
				return this._GoalID;
			}
			set
			{
				if ((this._GoalID != value))
				{
					if (this._Goal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoalIDChanging(value);
					this.SendPropertyChanging();
					this._GoalID = value;
					this.SendPropertyChanged("GoalID");
					this.OnGoalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RewardID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RewardID
		{
			get
			{
				return this._RewardID;
			}
			set
			{
				if ((this._RewardID != value))
				{
					if (this._Reward.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRewardIDChanging(value);
					this.SendPropertyChanging();
					this._RewardID = value;
					this.SendPropertyChanged("RewardID");
					this.OnRewardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goal_Ref_GoalReward", Storage="_Goal", ThisKey="GoalID", OtherKey="GoalID", IsForeignKey=true)]
		public Goal Goal
		{
			get
			{
				return this._Goal.Entity;
			}
			set
			{
				Goal previousValue = this._Goal.Entity;
				if (((previousValue != value) 
							|| (this._Goal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Goal.Entity = null;
						previousValue.Ref_GoalRewards.Remove(this);
					}
					this._Goal.Entity = value;
					if ((value != null))
					{
						value.Ref_GoalRewards.Add(this);
						this._GoalID = value.GoalID;
					}
					else
					{
						this._GoalID = default(int);
					}
					this.SendPropertyChanged("Goal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reward_Ref_GoalReward", Storage="_Reward", ThisKey="RewardID", OtherKey="RewardID", IsForeignKey=true)]
		public Reward Reward
		{
			get
			{
				return this._Reward.Entity;
			}
			set
			{
				Reward previousValue = this._Reward.Entity;
				if (((previousValue != value) 
							|| (this._Reward.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reward.Entity = null;
						previousValue.Ref_GoalRewards.Remove(this);
					}
					this._Reward.Entity = value;
					if ((value != null))
					{
						value.Ref_GoalRewards.Add(this);
						this._RewardID = value.RewardID;
					}
					else
					{
						this._RewardID = default(int);
					}
					this.SendPropertyChanged("Reward");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref_UserAlbums")]
	public partial class Ref_UserAlbum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _AlbumID;
		
		private EntityRef<Album> _Album;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnAlbumIDChanging(int value);
    partial void OnAlbumIDChanged();
    #endregion
		
		public Ref_UserAlbum()
		{
			this._Album = default(EntityRef<Album>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					if (this._Album.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_Ref_UserAlbum", Storage="_Album", ThisKey="AlbumID", OtherKey="AlbumId", IsForeignKey=true)]
		public Album Album
		{
			get
			{
				return this._Album.Entity;
			}
			set
			{
				Album previousValue = this._Album.Entity;
				if (((previousValue != value) 
							|| (this._Album.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Album.Entity = null;
						previousValue.Ref_UserAlbums.Remove(this);
					}
					this._Album.Entity = value;
					if ((value != null))
					{
						value.Ref_UserAlbums.Add(this);
						this._AlbumID = value.AlbumId;
					}
					else
					{
						this._AlbumID = default(int);
					}
					this.SendPropertyChanged("Album");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Ref_UserAlbum", Storage="_UserProfile", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Ref_UserAlbums.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Ref_UserAlbums.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ref_UserLinks")]
	public partial class Ref_UserLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private int _LinkID;
		
		private EntityRef<File> _File;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnLinkIDChanging(int value);
    partial void OnLinkIDChanged();
    #endregion
		
		public Ref_UserLink()
		{
			this._File = default(EntityRef<File>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LinkID
		{
			get
			{
				return this._LinkID;
			}
			set
			{
				if ((this._LinkID != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinkIDChanging(value);
					this.SendPropertyChanging();
					this._LinkID = value;
					this.SendPropertyChanged("LinkID");
					this.OnLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_Ref_UserLink", Storage="_File", ThisKey="LinkID", OtherKey="FileID", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.Ref_UserLinks.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.Ref_UserLinks.Add(this);
						this._LinkID = value.FileID;
					}
					else
					{
						this._LinkID = default(int);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Ref_UserLink", Storage="_UserProfile", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Ref_UserLinks.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Ref_UserLinks.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rewards")]
	public partial class Reward : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RewardID;
		
		private int _RewardTypeID;
		
		private int _UserID;
		
		private string _Description;
		
		private int _Minimum;
		
		private System.DateTime _DeliveryDate;
		
		private System.Nullable<int> _MaxAvailable;
		
		private EntitySet<Ref_GoalReward> _Ref_GoalRewards;
		
		private EntityRef<RewardType> _RewardType;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRewardIDChanging(int value);
    partial void OnRewardIDChanged();
    partial void OnRewardTypeIDChanging(int value);
    partial void OnRewardTypeIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMinimumChanging(int value);
    partial void OnMinimumChanged();
    partial void OnDeliveryDateChanging(System.DateTime value);
    partial void OnDeliveryDateChanged();
    partial void OnMaxAvailableChanging(System.Nullable<int> value);
    partial void OnMaxAvailableChanged();
    #endregion
		
		public Reward()
		{
			this._Ref_GoalRewards = new EntitySet<Ref_GoalReward>(new Action<Ref_GoalReward>(this.attach_Ref_GoalRewards), new Action<Ref_GoalReward>(this.detach_Ref_GoalRewards));
			this._RewardType = default(EntityRef<RewardType>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RewardID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RewardID
		{
			get
			{
				return this._RewardID;
			}
			set
			{
				if ((this._RewardID != value))
				{
					this.OnRewardIDChanging(value);
					this.SendPropertyChanging();
					this._RewardID = value;
					this.SendPropertyChanged("RewardID");
					this.OnRewardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RewardTypeID", DbType="Int NOT NULL")]
		public int RewardTypeID
		{
			get
			{
				return this._RewardTypeID;
			}
			set
			{
				if ((this._RewardTypeID != value))
				{
					if (this._RewardType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRewardTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RewardTypeID = value;
					this.SendPropertyChanged("RewardTypeID");
					this.OnRewardTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Minimum", DbType="Int NOT NULL")]
		public int Minimum
		{
			get
			{
				return this._Minimum;
			}
			set
			{
				if ((this._Minimum != value))
				{
					this.OnMinimumChanging(value);
					this.SendPropertyChanging();
					this._Minimum = value;
					this.SendPropertyChanged("Minimum");
					this.OnMinimumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="Date NOT NULL")]
		public System.DateTime DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxAvailable", DbType="Int")]
		public System.Nullable<int> MaxAvailable
		{
			get
			{
				return this._MaxAvailable;
			}
			set
			{
				if ((this._MaxAvailable != value))
				{
					this.OnMaxAvailableChanging(value);
					this.SendPropertyChanging();
					this._MaxAvailable = value;
					this.SendPropertyChanged("MaxAvailable");
					this.OnMaxAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reward_Ref_GoalReward", Storage="_Ref_GoalRewards", ThisKey="RewardID", OtherKey="RewardID")]
		public EntitySet<Ref_GoalReward> Ref_GoalRewards
		{
			get
			{
				return this._Ref_GoalRewards;
			}
			set
			{
				this._Ref_GoalRewards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RewardType_Reward", Storage="_RewardType", ThisKey="RewardTypeID", OtherKey="RewardTypeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RewardType RewardType
		{
			get
			{
				return this._RewardType.Entity;
			}
			set
			{
				RewardType previousValue = this._RewardType.Entity;
				if (((previousValue != value) 
							|| (this._RewardType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RewardType.Entity = null;
						previousValue.Rewards.Remove(this);
					}
					this._RewardType.Entity = value;
					if ((value != null))
					{
						value.Rewards.Add(this);
						this._RewardTypeID = value.RewardTypeID;
					}
					else
					{
						this._RewardTypeID = default(int);
					}
					this.SendPropertyChanged("RewardType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Reward", Storage="_UserProfile", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.Rewards.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.Rewards.Add(this);
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ref_GoalRewards(Ref_GoalReward entity)
		{
			this.SendPropertyChanging();
			entity.Reward = this;
		}
		
		private void detach_Ref_GoalRewards(Ref_GoalReward entity)
		{
			this.SendPropertyChanging();
			entity.Reward = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RewardTypes")]
	public partial class RewardType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RewardTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Reward> _Rewards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRewardTypeIDChanging(int value);
    partial void OnRewardTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public RewardType()
		{
			this._Rewards = new EntitySet<Reward>(new Action<Reward>(this.attach_Rewards), new Action<Reward>(this.detach_Rewards));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RewardTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RewardTypeID
		{
			get
			{
				return this._RewardTypeID;
			}
			set
			{
				if ((this._RewardTypeID != value))
				{
					this.OnRewardTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RewardTypeID = value;
					this.SendPropertyChanged("RewardTypeID");
					this.OnRewardTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RewardType_Reward", Storage="_Rewards", ThisKey="RewardTypeID", OtherKey="RewardTypeID")]
		public EntitySet<Reward> Rewards
		{
			get
			{
				return this._Rewards;
			}
			set
			{
				this._Rewards.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rewards(Reward entity)
		{
			this.SendPropertyChanging();
			entity.RewardType = this;
		}
		
		private void detach_Rewards(Reward entity)
		{
			this.SendPropertyChanging();
			entity.RewardType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tags")]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TagID;
		
		private string _Tag1;
		
		private EntitySet<Ref_AlbumTag> _Ref_AlbumTags;
		
		private EntitySet<Ref_CampaignTag> _Ref_CampaignTags;
		
		private EntitySet<Ref_FileTag> _Ref_FileTags;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagIDChanging(int value);
    partial void OnTagIDChanged();
    partial void OnTag1Changing(string value);
    partial void OnTag1Changed();
    #endregion
		
		public Tag()
		{
			this._Ref_AlbumTags = new EntitySet<Ref_AlbumTag>(new Action<Ref_AlbumTag>(this.attach_Ref_AlbumTags), new Action<Ref_AlbumTag>(this.detach_Ref_AlbumTags));
			this._Ref_CampaignTags = new EntitySet<Ref_CampaignTag>(new Action<Ref_CampaignTag>(this.attach_Ref_CampaignTags), new Action<Ref_CampaignTag>(this.detach_Ref_CampaignTags));
			this._Ref_FileTags = new EntitySet<Ref_FileTag>(new Action<Ref_FileTag>(this.attach_Ref_FileTags), new Action<Ref_FileTag>(this.detach_Ref_FileTags));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Tag", Storage="_Tag1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tag1
		{
			get
			{
				return this._Tag1;
			}
			set
			{
				if ((this._Tag1 != value))
				{
					this.OnTag1Changing(value);
					this.SendPropertyChanging();
					this._Tag1 = value;
					this.SendPropertyChanged("Tag1");
					this.OnTag1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_Ref_AlbumTag", Storage="_Ref_AlbumTags", ThisKey="TagID", OtherKey="TagID")]
		public EntitySet<Ref_AlbumTag> Ref_AlbumTags
		{
			get
			{
				return this._Ref_AlbumTags;
			}
			set
			{
				this._Ref_AlbumTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_Ref_CampaignTag", Storage="_Ref_CampaignTags", ThisKey="TagID", OtherKey="TagID")]
		public EntitySet<Ref_CampaignTag> Ref_CampaignTags
		{
			get
			{
				return this._Ref_CampaignTags;
			}
			set
			{
				this._Ref_CampaignTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_Ref_FileTag", Storage="_Ref_FileTags", ThisKey="TagID", OtherKey="TagID")]
		public EntitySet<Ref_FileTag> Ref_FileTags
		{
			get
			{
				return this._Ref_FileTags;
			}
			set
			{
				this._Ref_FileTags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ref_AlbumTags(Ref_AlbumTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_Ref_AlbumTags(Ref_AlbumTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
		
		private void attach_Ref_CampaignTags(Ref_CampaignTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_Ref_CampaignTags(Ref_CampaignTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
		
		private void attach_Ref_FileTags(Ref_FileTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_Ref_FileTags(Ref_FileTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transactions")]
	public partial class Transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseID;
		
		private int _TransactionTypeID;
		
		private decimal _Amount;
		
		private System.DateTime _Date;
		
		private System.Nullable<int> _AccountID;
		
		private int _TransactionID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Purchase> _Purchase;
		
		private EntityRef<TransactionType> _TransactionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseIDChanging(int value);
    partial void OnPurchaseIDChanged();
    partial void OnTransactionTypeIDChanging(int value);
    partial void OnTransactionTypeIDChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    #endregion
		
		public Transaction()
		{
			this._Account = default(EntityRef<Account>);
			this._Purchase = default(EntityRef<Purchase>);
			this._TransactionType = default(EntityRef<TransactionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="Int NOT NULL")]
		public int PurchaseID
		{
			get
			{
				return this._PurchaseID;
			}
			set
			{
				if ((this._PurchaseID != value))
				{
					if (this._Purchase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseID = value;
					this.SendPropertyChanged("PurchaseID");
					this.OnPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeID", DbType="Int NOT NULL")]
		public int TransactionTypeID
		{
			get
			{
				return this._TransactionTypeID;
			}
			set
			{
				if ((this._TransactionTypeID != value))
				{
					if (this._TransactionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTransactionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionTypeID = value;
					this.SendPropertyChanged("TransactionTypeID");
					this.OnTransactionTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="Int")]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Transaction", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_Transaction", Storage="_Purchase", ThisKey="PurchaseID", OtherKey="PurchaseID", IsForeignKey=true)]
		public Purchase Purchase
		{
			get
			{
				return this._Purchase.Entity;
			}
			set
			{
				Purchase previousValue = this._Purchase.Entity;
				if (((previousValue != value) 
							|| (this._Purchase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Purchase.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._Purchase.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._PurchaseID = value.PurchaseID;
					}
					else
					{
						this._PurchaseID = default(int);
					}
					this.SendPropertyChanged("Purchase");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionType_Transaction", Storage="_TransactionType", ThisKey="TransactionTypeID", OtherKey="TransactionTypeID", IsForeignKey=true)]
		public TransactionType TransactionType
		{
			get
			{
				return this._TransactionType.Entity;
			}
			set
			{
				TransactionType previousValue = this._TransactionType.Entity;
				if (((previousValue != value) 
							|| (this._TransactionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TransactionType.Entity = null;
						previousValue.Transactions.Remove(this);
					}
					this._TransactionType.Entity = value;
					if ((value != null))
					{
						value.Transactions.Add(this);
						this._TransactionTypeID = value.TransactionTypeID;
					}
					else
					{
						this._TransactionTypeID = default(int);
					}
					this.SendPropertyChanged("TransactionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransactionTypes")]
	public partial class TransactionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<Transaction> _Transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionTypeIDChanging(int value);
    partial void OnTransactionTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public TransactionType()
		{
			this._Transactions = new EntitySet<Transaction>(new Action<Transaction>(this.attach_Transactions), new Action<Transaction>(this.detach_Transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TransactionTypeID
		{
			get
			{
				return this._TransactionTypeID;
			}
			set
			{
				if ((this._TransactionTypeID != value))
				{
					this.OnTransactionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionTypeID = value;
					this.SendPropertyChanged("TransactionTypeID");
					this.OnTransactionTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TransactionType_Transaction", Storage="_Transactions", ThisKey="TransactionTypeID", OtherKey="TransactionTypeID")]
		public EntitySet<Transaction> Transactions
		{
			get
			{
				return this._Transactions;
			}
			set
			{
				this._Transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.TransactionType = this;
		}
		
		private void detach_Transactions(Transaction entity)
		{
			this.SendPropertyChanging();
			entity.TransactionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAddr")]
	public partial class UserAddr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserAddrID;
		
		private int _UserId;
		
		private string _Add1;
		
		private string _Add2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Phone;
		
		private string _Cell;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAddrIDChanging(int value);
    partial void OnUserAddrIDChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnAdd1Changing(string value);
    partial void OnAdd1Changed();
    partial void OnAdd2Changing(string value);
    partial void OnAdd2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCellChanging(string value);
    partial void OnCellChanged();
    #endregion
		
		public UserAddr()
		{
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddrID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserAddrID
		{
			get
			{
				return this._UserAddrID;
			}
			set
			{
				if ((this._UserAddrID != value))
				{
					this.OnUserAddrIDChanging(value);
					this.SendPropertyChanging();
					this._UserAddrID = value;
					this.SendPropertyChanged("UserAddrID");
					this.OnUserAddrIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Add1", DbType="NVarChar(100)")]
		public string Add1
		{
			get
			{
				return this._Add1;
			}
			set
			{
				if ((this._Add1 != value))
				{
					this.OnAdd1Changing(value);
					this.SendPropertyChanging();
					this._Add1 = value;
					this.SendPropertyChanged("Add1");
					this.OnAdd1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Add2", DbType="NVarChar(100)")]
		public string Add2
		{
			get
			{
				return this._Add2;
			}
			set
			{
				if ((this._Add2 != value))
				{
					this.OnAdd2Changing(value);
					this.SendPropertyChanging();
					this._Add2 = value;
					this.SendPropertyChanged("Add2");
					this.OnAdd2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(2)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(10)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cell", DbType="NVarChar(20)")]
		public string Cell
		{
			get
			{
				return this._Cell;
			}
			set
			{
				if ((this._Cell != value))
				{
					this.OnCellChanging(value);
					this.SendPropertyChanging();
					this._Cell = value;
					this.SendPropertyChanged("Cell");
					this.OnCellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserAddr", Storage="_UserProfile", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.UserAddrs.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.UserAddrs.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfile")]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Email;
		
		private int _UserId;
		
		private string _Blurb;
		
		private string _Title;
		
		private string _Skills;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Middle;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private System.Nullable<int> _Avatar;
		
		private string _UserName;
		
		private EntitySet<Account> _Accounts;
		
		private EntitySet<Activity> _Activities;
		
		private EntitySet<Album> _Albums;
		
		private EntitySet<Campaign> _Campaigns;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<File> _Files;
		
		private EntitySet<Goal> _Goals;
		
		private EntitySet<Message> _Messages;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<Purchase> _Purchases;
		
		private EntitySet<Ref_CampaignUser> _Ref_CampaignUsers;
		
		private EntitySet<Ref_UserAlbum> _Ref_UserAlbums;
		
		private EntitySet<Ref_UserLink> _Ref_UserLinks;
		
		private EntitySet<Reward> _Rewards;
		
		private EntitySet<UserAddr> _UserAddrs;
		
		private EntitySet<webpages_Membership> _webpages_Memberships;
		
		private EntitySet<webpages_OAuthMembership> _webpages_OAuthMemberships;
		
		private EntitySet<webpages_UsersInRole> _webpages_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnBlurbChanging(string value);
    partial void OnBlurbChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSkillsChanging(string value);
    partial void OnSkillsChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnMiddleChanging(string value);
    partial void OnMiddleChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnAvatarChanging(System.Nullable<int> value);
    partial void OnAvatarChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public UserProfile()
		{
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			this._Activities = new EntitySet<Activity>(new Action<Activity>(this.attach_Activities), new Action<Activity>(this.detach_Activities));
			this._Albums = new EntitySet<Album>(new Action<Album>(this.attach_Albums), new Action<Album>(this.detach_Albums));
			this._Campaigns = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campaigns), new Action<Campaign>(this.detach_Campaigns));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._Files = new EntitySet<File>(new Action<File>(this.attach_Files), new Action<File>(this.detach_Files));
			this._Goals = new EntitySet<Goal>(new Action<Goal>(this.attach_Goals), new Action<Goal>(this.detach_Goals));
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Purchases = new EntitySet<Purchase>(new Action<Purchase>(this.attach_Purchases), new Action<Purchase>(this.detach_Purchases));
			this._Ref_CampaignUsers = new EntitySet<Ref_CampaignUser>(new Action<Ref_CampaignUser>(this.attach_Ref_CampaignUsers), new Action<Ref_CampaignUser>(this.detach_Ref_CampaignUsers));
			this._Ref_UserAlbums = new EntitySet<Ref_UserAlbum>(new Action<Ref_UserAlbum>(this.attach_Ref_UserAlbums), new Action<Ref_UserAlbum>(this.detach_Ref_UserAlbums));
			this._Ref_UserLinks = new EntitySet<Ref_UserLink>(new Action<Ref_UserLink>(this.attach_Ref_UserLinks), new Action<Ref_UserLink>(this.detach_Ref_UserLinks));
			this._Rewards = new EntitySet<Reward>(new Action<Reward>(this.attach_Rewards), new Action<Reward>(this.detach_Rewards));
			this._UserAddrs = new EntitySet<UserAddr>(new Action<UserAddr>(this.attach_UserAddrs), new Action<UserAddr>(this.detach_UserAddrs));
			this._webpages_Memberships = new EntitySet<webpages_Membership>(new Action<webpages_Membership>(this.attach_webpages_Memberships), new Action<webpages_Membership>(this.detach_webpages_Memberships));
			this._webpages_OAuthMemberships = new EntitySet<webpages_OAuthMembership>(new Action<webpages_OAuthMembership>(this.attach_webpages_OAuthMemberships), new Action<webpages_OAuthMembership>(this.detach_webpages_OAuthMemberships));
			this._webpages_UsersInRoles = new EntitySet<webpages_UsersInRole>(new Action<webpages_UsersInRole>(this.attach_webpages_UsersInRoles), new Action<webpages_UsersInRole>(this.detach_webpages_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(4000)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blurb", DbType="NVarChar(MAX)")]
		public string Blurb
		{
			get
			{
				return this._Blurb;
			}
			set
			{
				if ((this._Blurb != value))
				{
					this.OnBlurbChanging(value);
					this.SendPropertyChanging();
					this._Blurb = value;
					this.SendPropertyChanged("Blurb");
					this.OnBlurbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skills", DbType="NVarChar(MAX)")]
		public string Skills
		{
			get
			{
				return this._Skills;
			}
			set
			{
				if ((this._Skills != value))
				{
					this.OnSkillsChanging(value);
					this.SendPropertyChanging();
					this._Skills = value;
					this.SendPropertyChanged("Skills");
					this.OnSkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middle", DbType="NVarChar(50)")]
		public string Middle
		{
			get
			{
				return this._Middle;
			}
			set
			{
				if ((this._Middle != value))
				{
					this.OnMiddleChanging(value);
					this.SendPropertyChanging();
					this._Middle = value;
					this.SendPropertyChanged("Middle");
					this.OnMiddleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="Int")]
		public System.Nullable<int> Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Account", Storage="_Accounts", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<Account> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Activity", Storage="_Activities", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<Activity> Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				this._Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Album", Storage="_Albums", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Album> Albums
		{
			get
			{
				return this._Albums;
			}
			set
			{
				this._Albums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Campaign", Storage="_Campaigns", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Campaign> Campaigns
		{
			get
			{
				return this._Campaigns;
			}
			set
			{
				this._Campaigns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Comment", Storage="_Comments", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_File", Storage="_Files", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<File> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Goal", Storage="_Goals", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<Goal> Goals
		{
			get
			{
				return this._Goals;
			}
			set
			{
				this._Goals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Message", Storage="_Messages", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Product", Storage="_Products", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Purchase", Storage="_Purchases", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<Purchase> Purchases
		{
			get
			{
				return this._Purchases;
			}
			set
			{
				this._Purchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Ref_CampaignUser", Storage="_Ref_CampaignUsers", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<Ref_CampaignUser> Ref_CampaignUsers
		{
			get
			{
				return this._Ref_CampaignUsers;
			}
			set
			{
				this._Ref_CampaignUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Ref_UserAlbum", Storage="_Ref_UserAlbums", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<Ref_UserAlbum> Ref_UserAlbums
		{
			get
			{
				return this._Ref_UserAlbums;
			}
			set
			{
				this._Ref_UserAlbums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Ref_UserLink", Storage="_Ref_UserLinks", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<Ref_UserLink> Ref_UserLinks
		{
			get
			{
				return this._Ref_UserLinks;
			}
			set
			{
				this._Ref_UserLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_Reward", Storage="_Rewards", ThisKey="UserId", OtherKey="UserID")]
		public EntitySet<Reward> Rewards
		{
			get
			{
				return this._Rewards;
			}
			set
			{
				this._Rewards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_UserAddr", Storage="_UserAddrs", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UserAddr> UserAddrs
		{
			get
			{
				return this._UserAddrs;
			}
			set
			{
				this._UserAddrs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_webpages_Membership", Storage="_webpages_Memberships", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<webpages_Membership> webpages_Memberships
		{
			get
			{
				return this._webpages_Memberships;
			}
			set
			{
				this._webpages_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_webpages_OAuthMembership", Storage="_webpages_OAuthMemberships", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<webpages_OAuthMembership> webpages_OAuthMemberships
		{
			get
			{
				return this._webpages_OAuthMemberships;
			}
			set
			{
				this._webpages_OAuthMemberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_webpages_UsersInRole", Storage="_webpages_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this._webpages_UsersInRoles;
			}
			set
			{
				this._webpages_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Activities(Activity entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_Albums(Album entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Albums(Album entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_Goals(Goal entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Goals(Goal entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_Ref_CampaignUsers(Ref_CampaignUser entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Ref_CampaignUsers(Ref_CampaignUser entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_Ref_UserAlbums(Ref_UserAlbum entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Ref_UserAlbums(Ref_UserAlbum entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_Ref_UserLinks(Ref_UserLink entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Ref_UserLinks(Ref_UserLink entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_Rewards(Reward entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_Rewards(Reward entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_UserAddrs(UserAddr entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_UserAddrs(UserAddr entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_webpages_Memberships(webpages_Membership entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_webpages_Memberships(webpages_Membership entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_webpages_OAuthMemberships(webpages_OAuthMembership entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_webpages_OAuthMemberships(webpages_OAuthMembership entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
		
		private void attach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_Membership")]
	public partial class webpages_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _ConfirmationToken;
		
		private System.Nullable<bool> _IsConfirmed;
		
		private System.Nullable<System.DateTime> _LastPasswordFailureDate;
		
		private int _PasswordFailuresSinceLastSuccess;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _PasswordChangedDate;
		
		private string _PasswordSalt;
		
		private string _PasswordVerificationToken;
		
		private System.Nullable<System.DateTime> _PasswordVerificationTokenExpirationDate;
		
		private int _MembershipID;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnConfirmationTokenChanging(string value);
    partial void OnConfirmationTokenChanged();
    partial void OnIsConfirmedChanging(System.Nullable<bool> value);
    partial void OnIsConfirmedChanged();
    partial void OnLastPasswordFailureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPasswordFailureDateChanged();
    partial void OnPasswordFailuresSinceLastSuccessChanging(int value);
    partial void OnPasswordFailuresSinceLastSuccessChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordChangedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordChangedDateChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnPasswordVerificationTokenChanging(string value);
    partial void OnPasswordVerificationTokenChanged();
    partial void OnPasswordVerificationTokenExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordVerificationTokenExpirationDateChanged();
    partial void OnMembershipIDChanging(int value);
    partial void OnMembershipIDChanged();
    #endregion
		
		public webpages_Membership()
		{
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationToken", DbType="NVarChar(128)")]
		public string ConfirmationToken
		{
			get
			{
				return this._ConfirmationToken;
			}
			set
			{
				if ((this._ConfirmationToken != value))
				{
					this.OnConfirmationTokenChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationToken = value;
					this.SendPropertyChanged("ConfirmationToken");
					this.OnConfirmationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirmed", DbType="Bit")]
		public System.Nullable<bool> IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordFailureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPasswordFailureDate
		{
			get
			{
				return this._LastPasswordFailureDate;
			}
			set
			{
				if ((this._LastPasswordFailureDate != value))
				{
					this.OnLastPasswordFailureDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordFailureDate = value;
					this.SendPropertyChanged("LastPasswordFailureDate");
					this.OnLastPasswordFailureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFailuresSinceLastSuccess", DbType="Int NOT NULL")]
		public int PasswordFailuresSinceLastSuccess
		{
			get
			{
				return this._PasswordFailuresSinceLastSuccess;
			}
			set
			{
				if ((this._PasswordFailuresSinceLastSuccess != value))
				{
					this.OnPasswordFailuresSinceLastSuccessChanging(value);
					this.SendPropertyChanging();
					this._PasswordFailuresSinceLastSuccess = value;
					this.SendPropertyChanged("PasswordFailuresSinceLastSuccess");
					this.OnPasswordFailuresSinceLastSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordChangedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordChangedDate
		{
			get
			{
				return this._PasswordChangedDate;
			}
			set
			{
				if ((this._PasswordChangedDate != value))
				{
					this.OnPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordChangedDate = value;
					this.SendPropertyChanged("PasswordChangedDate");
					this.OnPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationToken", DbType="NVarChar(128)")]
		public string PasswordVerificationToken
		{
			get
			{
				return this._PasswordVerificationToken;
			}
			set
			{
				if ((this._PasswordVerificationToken != value))
				{
					this.OnPasswordVerificationTokenChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationToken = value;
					this.SendPropertyChanged("PasswordVerificationToken");
					this.OnPasswordVerificationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationTokenExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordVerificationTokenExpirationDate
		{
			get
			{
				return this._PasswordVerificationTokenExpirationDate;
			}
			set
			{
				if ((this._PasswordVerificationTokenExpirationDate != value))
				{
					this.OnPasswordVerificationTokenExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationTokenExpirationDate = value;
					this.SendPropertyChanged("PasswordVerificationTokenExpirationDate");
					this.OnPasswordVerificationTokenExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MembershipID
		{
			get
			{
				return this._MembershipID;
			}
			set
			{
				if ((this._MembershipID != value))
				{
					this.OnMembershipIDChanging(value);
					this.SendPropertyChanging();
					this._MembershipID = value;
					this.SendPropertyChanged("MembershipID");
					this.OnMembershipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_webpages_Membership", Storage="_UserProfile", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.webpages_Memberships.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.webpages_Memberships.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_OAuthMembership")]
	public partial class webpages_OAuthMembership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Provider;
		
		private string _ProviderUserId;
		
		private int _UserId;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProviderChanging(string value);
    partial void OnProviderChanged();
    partial void OnProviderUserIdChanging(string value);
    partial void OnProviderUserIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public webpages_OAuthMembership()
		{
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Provider
		{
			get
			{
				return this._Provider;
			}
			set
			{
				if ((this._Provider != value))
				{
					this.OnProviderChanging(value);
					this.SendPropertyChanging();
					this._Provider = value;
					this.SendPropertyChanged("Provider");
					this.OnProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderUserId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderUserId
		{
			get
			{
				return this._ProviderUserId;
			}
			set
			{
				if ((this._ProviderUserId != value))
				{
					this.OnProviderUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderUserId = value;
					this.SendPropertyChanged("ProviderUserId");
					this.OnProviderUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_webpages_OAuthMembership", Storage="_UserProfile", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.webpages_OAuthMemberships.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.webpages_OAuthMemberships.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_Roles")]
	public partial class webpages_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _RoleName;
		
		private EntitySet<webpages_UsersInRole> _webpages_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public webpages_Role()
		{
			this._webpages_UsersInRoles = new EntitySet<webpages_UsersInRole>(new Action<webpages_UsersInRole>(this.attach_webpages_UsersInRoles), new Action<webpages_UsersInRole>(this.detach_webpages_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="webpages_Role_webpages_UsersInRole", Storage="_webpages_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this._webpages_UsersInRoles;
			}
			set
			{
				this._webpages_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.webpages_Role = this;
		}
		
		private void detach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.webpages_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_UsersInRoles")]
	public partial class webpages_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _RoleId;
		
		private EntityRef<webpages_Role> _webpages_Role;
		
		private EntityRef<UserProfile> _UserProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public webpages_UsersInRole()
		{
			this._webpages_Role = default(EntityRef<webpages_Role>);
			this._UserProfile = default(EntityRef<UserProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._webpages_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="webpages_Role_webpages_UsersInRole", Storage="_webpages_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public webpages_Role webpages_Role
		{
			get
			{
				return this._webpages_Role.Entity;
			}
			set
			{
				webpages_Role previousValue = this._webpages_Role.Entity;
				if (((previousValue != value) 
							|| (this._webpages_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._webpages_Role.Entity = null;
						previousValue.webpages_UsersInRoles.Remove(this);
					}
					this._webpages_Role.Entity = value;
					if ((value != null))
					{
						value.webpages_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("webpages_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_webpages_UsersInRole", Storage="_UserProfile", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.webpages_UsersInRoles.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.webpages_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
